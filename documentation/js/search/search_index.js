var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.306,1,2.071]],["body/controllers/AppController.html",[0,2.147,1,3.405,2,1.739,3,0.289,4,0.289,5,0.289,6,3.56,7,0.392,8,4.395,9,1.685,10,0.552,11,0.032,12,0.758,13,3.022,14,3.56,15,0.34,16,0.062,17,2.485,18,1.478,19,3.56,20,1.071,21,1.162,22,4.257,23,0.025,24,0.025]],["title/modules/AppModule.html",[25,1.419,26,2.071]],["body/modules/AppModule.html",[1,3.026,2,1.645,3,0.194,4,0.194,5,0.194,10,0.645,11,0.031,12,0.507,13,2.947,14,2.382,15,0.227,16,0.041,23,0.019,24,0.019,25,1.788,26,3.981,27,1.379,28,1.95,29,2.382,30,2.382,31,2.382,32,3.245,33,3.245,34,3.245,35,2.35,36,1.662,37,1.662,38,2.848,39,2.609,40,2.609,41,0.778,42,2.382,43,4.026,44,5.076,45,0.462,46,2.848,47,0.717,48,0.555,49,0.423,50,0.717,51,2.848,52,0.717,53,2.075,54,4.026,55,1.845,56,1.072,57,2.848,58,2.075,59,2.848,60,2.848,61,0.933,62,1.164,63,4.026,64,1.662,65,2.848,66,1.291,67,1.265,68,1.662,69,2.848,70,1.645,71,1.845,72,1.845,73,2.848,74,2.848,75,2.848,76,1.845,77,2.848,78,2.075,79,2.848,80,2.075,81,2.848,82,1.51,83,2.848,84,1.662,85,2.848,86,1.662,87,2.848,88,2.075,89,1.662,90,2.848]],["title/injectables/AppService.html",[13,1.694,91,0.623]],["body/injectables/AppService.html",[3,0.301,4,0.301,5,0.301,7,0.408,8,4.501,9,1.725,10,0.465,11,0.031,12,0.788,13,2.853,15,0.353,16,0.064,19,3.701,20,1.114,21,1.208,23,0.026,24,0.026,91,1.049,92,1.808,93,3.701,94,4.425,95,4.425]],["title/injectables/FindUser.html",[91,0.623,96,1.548]],["body/injectables/FindUser.html",[3,0.356,4,0.208,5,0.208,7,0.282,10,0.577,11,0.032,12,0.545,15,0.338,16,0.079,18,1.47,20,1.318,21,1.155,23,0.02,24,0.02,41,1.155,45,0.686,47,1.065,48,0.946,49,0.444,50,1.065,52,0.77,56,1.151,61,1.124,62,1.249,66,0.98,67,1.358,91,0.946,92,1.249,96,2.049,97,2.228,98,1.221,99,3.144,100,2.155,101,0.362,102,1.55,103,4.231,104,2.35,105,2.558,106,2.914,107,3.058,108,3.083,109,3.539,110,3.058,111,1.88,112,1.151,113,1.785,114,0.98,115,2.228,116,1.88,117,1.47,118,2.742,119,1.47,120,2.228,121,1.151,122,1.481,123,2.228,124,2.228,125,2.558,126,3.083,127,2.228,128,1.481]],["title/injectables/FindVaccineName.html",[91,0.623,122,1.548]],["body/injectables/FindVaccineName.html",[3,0.356,4,0.208,5,0.208,7,0.282,10,0.577,11,0.032,12,0.545,15,0.338,16,0.079,18,1.47,20,1.318,21,1.155,23,0.02,24,0.02,41,1.155,45,0.686,47,1.065,48,1.021,49,0.444,50,1.065,52,0.77,56,1.151,61,0.98,62,1.249,66,0.98,67,1.358,91,0.946,92,1.249,96,1.481,97,2.228,98,1.221,99,3.144,100,2.155,101,0.362,102,1.55,104,2.35,106,2.914,108,2.228,109,2.558,111,1.358,112,1.151,113,1.785,114,0.98,115,2.228,116,1.88,117,1.47,118,2.742,119,1.47,120,2.228,121,1.593,122,2.536,123,2.228,124,3.083,125,3.539,126,3.083,127,2.228,128,1.481,129,2.558,130,3.058,131,3.058]],["title/classes/HttpExceptionFilter.html",[16,0.046,132,2.328]],["body/classes/HttpExceptionFilter.html",[3,0.238,4,0.238,5,0.238,7,0.322,10,0.487,11,0.031,12,0.623,15,0.279,16,0.075,23,0.022,24,0.022,41,1.266,45,0.567,47,0.88,48,0.682,49,0.367,50,0.88,52,0.88,53,2.548,76,3.368,89,2.705,98,1.167,99,3.003,101,0.414,117,1.922,132,3.376,133,1.854,134,2.925,135,4.635,136,4.635,137,3.876,138,5.198,139,4.347,140,4.635,141,5.534,142,5.534,143,3.498,144,3.498,145,3.876,146,2.705,147,1.854,148,3.498,149,3.498,150,3.498,151,3.498,152,3.498,153,3.003,154,3.498,155,3.498,156,2.925,157,3.498,158,1.429,159,3.498,160,3.498,161,3.498,162,2.548,163,3.498]],["title/classes/JwtServiceClass.html",[16,0.046,164,1.694]],["body/classes/JwtServiceClass.html",[3,0.156,4,0.156,5,0.156,7,0.422,9,1.835,10,0.433,11,0.031,15,0.183,16,0.033,17,1.339,18,0.797,20,1.038,21,1.126,23,0.016,24,0.016,41,0.939,45,0.743,47,1.153,48,0.893,49,0.481,50,1.153,52,1.297,61,1.194,62,0.937,101,0.271,102,1.664,104,1.111,111,1.019,112,0.863,117,1.194,119,1.194,133,1.216,139,1.918,146,3.393,147,2.602,162,3.005,164,1.823,165,1.918,166,4.337,167,2.505,168,3.438,169,2.875,170,3.438,171,3.438,172,3.438,173,3.438,174,2.293,175,5.153,176,2.293,177,3.438,178,1.591,179,2.293,180,2.875,181,4.924,182,3.832,183,3.832,184,1.665,185,3.832,186,3.438,187,2.293,188,3.438,189,2.875,190,3.438,191,2.875,192,3.438,193,3.438,194,2.293,195,5.153,196,3.438,197,1.671,198,2.219,199,2.293,200,1.918,201,2.293,202,2.293,203,1.339,204,2.293,205,2.293,206,3.438,207,1.339,208,2.293,209,2.293,210,2.293]],["title/injectables/LoggerMiddleware.html",[72,2.071,91,0.623]],["body/injectables/LoggerMiddleware.html",[3,0.356,4,0.207,5,0.207,7,0.281,9,1.761,10,0.443,11,0.031,12,0.543,15,0.244,16,0.044,21,1.153,23,0.02,24,0.02,41,1.153,45,0.685,47,0.768,48,0.595,49,0.32,50,0.768,52,0.768,53,3.077,72,2.737,89,1.78,91,0.824,92,1.246,98,1.063,100,1.876,101,0.361,116,2.152,117,1.817,145,4.751,146,3.465,147,1.617,156,4.052,158,1.726,211,2.551,212,5.681,213,3.077,214,4.223,215,1.876,216,4.223,217,4.223,218,3.81,219,5.23,220,3.05,221,2.551,222,1.976,223,4.223,224,3.05,225,4.223,226,3.05,227,4.845,228,3.05,229,3.05,230,3.05,231,3.05,232,4.845,233,3.05,234,3.05,235,4.223,236,4.223]],["title/classes/MaintainanceEntity.html",[16,0.046,237,1.865]],["body/classes/MaintainanceEntity.html",[3,0.265,4,0.265,5,0.265,7,0.36,10,0.575,11,0.031,15,0.311,16,0.072,20,1.452,23,0.024,24,0.024,45,0.806,48,1.068,49,0.522,101,0.462,111,2.433,114,1.251,133,2.068,215,2.21,237,2.904,238,3.262,239,4.975,240,1.873,241,2.21,242,3.9,243,3.9,244,3.9,245,3.9,246,3.197,247,1.594,248,4.16,249,3.262,250,2.527,251,3.549,252,3.9]],["title/guards/RolesGuard.html",[253,2.328,254,2.328]],["body/guards/RolesGuard.html",[3,0.219,4,0.219,5,0.219,7,0.296,10,0.562,11,0.031,12,0.573,15,0.257,16,0.072,18,1.522,21,1.36,23,0.021,24,0.021,41,1.196,45,0.71,47,1.103,48,0.854,49,0.46,50,1.103,52,0.81,88,2.343,89,1.877,91,0.854,98,1.103,101,0.381,104,2.122,116,1.946,117,1.117,164,3.132,185,3.664,203,2.557,254,3.191,255,3.216,256,2.69,257,4.381,258,4.381,259,4.381,260,4.381,261,5.596,262,3.216,263,5.349,264,3.216,265,4.381,266,3.216,267,5.349,268,3.216,269,4.381,270,3.191,271,4.982,272,2.69,273,2.69,274,3.216,275,3.191,276,3.216,277,3.216,278,3.216]],["title/interfaces/SwaggerConfig.html",[279,2.071,280,2.071]],["body/interfaces/SwaggerConfig.html",[3,0.278,4,0.278,5,0.278,7,0.557,11,0.03,15,0.326,20,1.635,23,0.024,24,0.024,49,0.616,100,1.815,101,0.484,215,2.276,279,2.647,280,3.32,281,4.086,282,3.417,283,2.647,284,2.976,285,3.417,286,1.538,287,4.907,288,4.907,289,4.907]],["title/classes/TypeOrmInterface.html",[16,0.046,290,2.071]],["body/classes/TypeOrmInterface.html",[3,0.269,4,0.269,5,0.269,7,0.365,11,0.03,15,0.316,16,0.057,20,1.583,23,0.024,24,0.024,45,0.97,49,0.628,76,3.573,78,4.017,80,4.017,82,2.923,84,3.218,101,0.468,114,1.268,133,2.097,178,1.374,215,2.23,284,2.882,285,3.308,286,1.489,290,3.252,291,3.308,292,3.956,293,3.956,294,3.956,295,2.431,296,3.956,297,3.956]],["title/entities/User.html",[61,0.74,240,1.203]],["body/entities/User.html",[3,0.158,4,0.158,5,0.158,7,0.214,10,0.519,11,0.031,15,0.186,16,0.05,20,1.446,23,0.016,24,0.016,45,0.895,48,0.454,49,0.58,61,1.069,70,2.347,82,2.747,86,1.358,98,0.586,101,0.275,102,1.029,114,0.746,117,0.808,119,0.808,158,0.951,162,2.532,203,2.694,215,1.544,218,1.695,237,2.029,240,1.737,241,2.452,246,3.134,247,0.951,248,3.479,249,1.946,250,1.508,251,3.479,270,2.532,286,1.309,295,1.683,298,1.695,299,3.476,300,3.476,301,2.029,302,4.16,303,4.16,304,4.16,305,3.031,306,4.16,307,4.16,308,3.031,309,2.327,310,2.907,311,2.327,312,2.327,313,2.327,314,3.031,315,2.327,316,2.327,317,3.476,318,3.476,319,3.476,320,2.327,321,2.327,322,2.327,323,2.327,324,1.946,325,2.907,326,3.476,327,2.327,328,3.476,329,2.327,330,2.327,331,2.532,332,2.907,333,1.946,334,1.946,335,2.252,336,1.695,337,1.946,338,1.946,339,1.946,340,1.695,341,1.946,342,1.946,343,1.946,344,1.695,345,2.327,346,1.946,347,2.907,348,2.327,349,2.327,350,2.327,351,2.327,352,2.327,353,2.327,354,2.327,355,2.327,356,2.907,357,1.695,358,1.695,359,1.946]],["title/controllers/UserController.html",[0,1.306,360,2.071]],["body/controllers/UserController.html",[0,1.21,2,1.21,3,0.201,4,0.201,5,0.201,7,0.273,9,1.327,10,0.591,11,0.031,12,0.527,15,0.236,16,0.043,17,1.728,18,1.028,21,1.13,23,0.02,24,0.02,41,1.13,45,0.671,47,1.041,48,0.807,49,0.434,50,1.041,52,1.2,61,1.387,62,1.21,98,1.041,101,0.35,102,1.666,112,1.558,119,1.437,146,3.44,147,1.57,178,2.007,184,2.004,198,1.434,203,1.728,240,1.558,241,1.838,247,1.21,360,2.681,361,2.476,362,2.157,363,4.138,364,3.989,365,2.961,366,4.138,367,2.961,368,4.318,369,3.014,370,2.476,371,3.014,372,4.138,373,2.961,374,3.014,375,2.157,376,4.138,377,2.157,378,2.528,379,2.476,380,2.476,381,2.961,382,2.961,383,2.961,384,2.961,385,2.961,386,2.961]],["title/classes/UserDto.html",[16,0.046,371,1.865]],["body/classes/UserDto.html",[3,0.267,4,0.267,5,0.267,7,0.362,10,0.412,11,0.031,15,0.314,16,0.079,20,1.456,23,0.024,24,0.024,45,0.81,49,0.525,61,1.158,82,2.914,101,0.465,111,2.441,133,2.082,178,2.009,215,2.22,241,2.22,246,3.486,247,1.605,286,1.881,301,2.917,371,2.917,387,3.285,388,4.997,389,4.179,390,4.997,391,3.928,392,3.928]],["title/modules/UserModule.html",[25,1.419,32,1.865]],["body/modules/UserModule.html",[2,1.963,3,0.251,4,0.251,5,0.251,10,0.642,11,0.031,12,0.658,15,0.295,16,0.053,23,0.023,24,0.023,25,2.134,27,1.789,28,2.327,32,3.506,35,2.804,36,2.156,37,2.156,39,3.113,40,2.394,55,2.394,56,1.391,61,0.856,62,1.509,164,2.547,197,2.691,360,3.459,378,3.184,379,3.09,393,3.09,394,3.09,395,3.694,396,3.694,397,3.694,398,3.09,399,3.694,400,3.694,401,4.804,402,3.694,403,3.694,404,3.694]],["title/injectables/UserService.html",[91,0.623,378,1.694]],["body/injectables/UserService.html",[3,0.153,4,0.153,5,0.153,7,0.376,9,1.456,10,0.558,11,0.031,12,0.401,15,0.18,16,0.059,18,1.178,21,0.926,23,0.016,24,0.016,41,0.926,45,0.661,47,1.027,48,0.796,49,0.428,50,1.027,52,1.143,56,0.848,61,1.428,62,0.92,82,2.407,88,1.64,91,0.661,92,0.92,98,1.226,101,0.266,102,1.515,104,1.642,105,1.883,106,2.407,108,2.471,111,1,112,1.277,113,1.314,114,0.722,115,1.64,116,1.506,117,1.778,118,2.942,119,1.577,120,1.64,146,3.1,147,1.194,158,1.386,164,2.816,166,2.471,167,2.471,169,2.836,178,1.845,181,2.836,184,1.642,198,1.642,200,1.883,207,1.314,218,1.64,240,1.277,286,1.277,301,1.979,335,2.197,336,1.64,337,1.883,338,1.883,339,1.883,340,1.64,341,1.883,342,1.883,343,1.883,344,1.64,364,2.836,368,3.797,369,2.471,370,2.836,371,2.65,378,1.798,380,1.883,398,1.883,405,1.64,406,2.471,407,2.836,408,3.391,409,2.252,410,2.252,411,3.391,412,3.391,413,3.391,414,3.391,415,2.252,416,2.252,417,2.252,418,2.252,419,2.252,420,3.391,421,2.252,422,2.252,423,2.252,424,2.252,425,2.252,426,3.391]],["title/entities/VaccineData.html",[70,1.306,240,1.203]],["body/entities/VaccineData.html",[3,0.191,4,0.191,5,0.191,7,0.259,10,0.581,11,0.031,15,0.224,16,0.041,20,1.392,23,0.019,24,0.019,45,0.922,49,0.597,61,1.37,66,1.896,70,1.627,86,1.637,101,0.332,102,0.83,114,0.899,121,1.5,128,2.243,153,3.001,178,1.383,215,1.769,237,2.325,240,1.898,241,2.527,246,2.943,247,1.146,251,3.584,295,2.442,305,3.374,308,3.374,314,3.374,331,2.902,333,2.346,346,2.346,427,2.346,428,3.873,429,3.873,430,2.805,431,2.805,432,2.805,433,2.805,434,3.983,435,2.805,436,2.805,437,2.805,438,2.805,439,2.805,440,3.331,441,4.631,442,4.631,443,2.805,444,2.805,445,2.346,446,2.805,447,2.805,448,2.805,449,2.805,450,2.805]],["title/controllers/VaccineDataController.html",[0,1.306,451,2.071]],["body/controllers/VaccineDataController.html",[0,1.501,2,0.778,3,0.129,4,0.129,5,0.129,7,0.383,9,1.746,10,0.436,11,0.031,12,0.339,15,0.152,16,0.028,17,1.111,18,0.661,20,1.42,21,1.232,23,0.014,24,0.014,41,0.814,45,0.732,47,1.136,48,0.88,49,0.474,50,1.136,52,1.371,61,1.2,68,2.793,70,1.698,71,1.233,84,1.739,98,1.371,100,2.3,101,0.225,102,1.731,111,1.632,112,1.699,119,1.567,121,2.05,128,2.013,153,3.241,178,2.167,184,2.508,198,2.318,213,3.772,241,2.004,247,0.778,295,1.443,362,1.386,374,1.386,375,1.386,377,1.386,451,1.931,452,2.318,453,1.592,454,2.492,455,2.492,456,2.492,457,2.492,458,2.492,459,1.592,460,2.98,461,1.903,462,3.028,463,2.492,464,1.592,465,2.98,466,1.903,467,2.492,468,1.592,469,2.98,470,1.903,471,4.003,472,1.592,473,2.98,474,1.903,475,1.592,476,2.98,477,1.903,478,3.028,479,1.947,480,1.592,481,1.592,482,1.592,483,1.903,484,1.903,485,1.903,486,1.903,487,1.903,488,1.903,489,1.903,490,1.903,491,1.903,492,1.903]],["title/modules/VaccineDataModule.html",[25,1.419,33,1.865]],["body/modules/VaccineDataModule.html",[2,1.897,3,0.239,4,0.239,5,0.239,10,0.644,11,0.031,12,0.625,15,0.28,16,0.051,23,0.022,24,0.022,25,2.063,27,1.699,28,2.249,33,3.658,35,2.711,36,2.048,37,2.048,39,3.009,40,2.274,55,2.274,56,1.321,61,1.076,62,1.434,66,1.489,67,1.559,68,2.048,70,1.434,71,2.274,96,2.868,121,1.749,122,2.868,451,3.373,452,1.699,479,3.139,480,2.935,493,2.935,494,2.935,495,3.509,496,3.509,497,2.935,498,3.509]],["title/injectables/VaccineDataService.html",[91,0.623,479,1.694]],["body/injectables/VaccineDataService.html",[3,0.103,4,0.103,5,0.103,7,0.335,9,1.625,10,0.478,11,0.032,12,0.269,15,0.121,16,0.045,18,1.093,20,1.334,21,1.097,23,0.012,24,0.012,41,0.676,45,0.7,47,1.086,48,0.841,49,0.453,50,1.086,52,1.276,56,0.569,61,1.25,62,0.617,66,1.288,67,0.671,68,2.66,70,1.862,71,0.978,91,0.483,92,0.617,96,2.207,98,1.197,100,2.251,101,0.179,102,1.643,104,1.199,106,1.929,111,1.616,112,1.512,113,0.881,114,0.484,116,1.398,117,1.264,118,2.039,119,1.76,121,0.932,122,2.207,126,2.292,128,1.945,153,3.082,158,1.641,167,1.804,178,2.099,184,2.304,198,1.945,207,1.445,213,3.465,222,1.604,286,0.932,295,1.524,325,1.263,357,1.1,406,1.804,428,1.263,429,1.263,452,2.207,454,2.07,455,2.07,456,2.07,457,2.07,458,2.07,459,2.07,462,1.804,464,2.07,467,2.07,468,2.07,471,3.609,472,2.07,475,2.07,478,2.651,479,1.312,497,1.263,499,1.263,500,2.476,501,2.476,502,2.476,503,1.51,504,1.51,505,2.476,506,1.51,507,2.476,508,2.476,509,1.51,510,1.51,511,1.51,512,1.51,513,1.51,514,1.1,515,1.51,516,1.51,517,1.51,518,1.51,519,1.263,520,1.51,521,1.51,522,1.51,523,1.51,524,1.51,525,1.51,526,1.51,527,1.51,528,3.146,529,2.07,530,3.146,531,3.146,532,1.51,533,2.476,534,1.51,535,1.51,536,2.07,537,1.51,538,2.476,539,1.51,540,1.263,541,1.51,542,1.51,543,1.51,544,1.263,545,1.51,546,3.639]],["title/controllers/VaccineNameController.html",[0,1.306,547,2.071]],["body/controllers/VaccineNameController.html",[0,2.044,2,1.325,3,0.3,4,0.221,5,0.221,7,0.406,9,1.413,10,0.564,11,0.031,12,0.578,15,0.259,16,0.047,17,1.894,18,1.127,21,0.886,23,0.021,24,0.021,41,1.203,45,0.526,47,0.817,48,0.976,49,0.341,50,0.817,52,1.109,61,1.021,64,2.572,66,1.721,67,1.441,84,2.572,98,1.351,101,0.384,102,1.481,112,1.221,119,1.127,121,2.179,178,1.95,184,2.134,198,1.571,241,1.441,247,1.325,362,2.364,369,3.21,374,2.364,375,4.089,377,2.364,452,2.134,481,2.713,482,2.713,547,2.855,548,2.713,549,5.368,550,3.685,551,2.713,552,4.406,553,3.244,554,2.653,555,2.713,556,3.244,557,3.244]],["title/modules/VaccineNameModule.html",[25,1.419,34,1.865]],["body/modules/VaccineNameModule.html",[2,2.042,3,0.267,4,0.267,5,0.267,10,0.627,11,0.031,12,0.7,15,0.314,16,0.057,23,0.024,24,0.024,25,2.22,27,1.902,28,2.42,34,3.563,35,2.917,36,2.293,37,2.293,39,3.238,40,2.545,55,2.545,56,1.479,64,2.293,66,1.259,67,1.745,121,1.881,452,1.902,547,3.561,554,3.237,555,3.285,558,3.285,559,3.285,560,3.928,561,3.928,562,3.928]],["title/injectables/VaccineNameService.html",[91,0.623,554,1.694]],["body/injectables/VaccineNameService.html",[3,0.205,4,0.205,5,0.205,7,0.386,9,1.344,10,0.547,11,0.031,12,0.537,15,0.241,16,0.044,18,1.048,21,0.824,23,0.02,24,0.02,41,1.145,45,0.68,47,1.055,48,1.067,49,0.44,50,1.055,52,1.055,56,1.136,64,2.812,66,1.669,67,1.34,91,0.817,92,1.233,98,1.055,100,1.862,101,0.357,102,1.426,104,2.03,106,2.76,112,1.136,113,1.761,114,0.967,116,1.34,117,1.048,119,1.048,121,1.96,123,2.198,124,3.054,127,2.198,128,1.461,129,2.523,158,1.968,178,1.808,184,2.03,191,3.506,198,1.461,207,1.761,286,1.578,301,2.447,406,3.054,407,3.506,452,2.333,462,3.054,514,2.198,519,2.523,540,2.523,550,3.506,551,3.506,554,2.222,563,2.523,564,3.017,565,3.017,566,4.192,567,4.192,568,4.192,569,4.192,570,3.017,571,3.017,572,3.017]],["title/entities/VaccineNames.html",[66,1.025,240,1.203]],["body/entities/VaccineNames.html",[3,0.214,4,0.214,5,0.214,7,0.291,10,0.518,11,0.032,15,0.252,16,0.046,20,1.088,23,0.021,24,0.021,45,0.86,48,0.843,49,0.557,66,1.386,70,2.51,86,1.84,101,0.373,102,0.933,114,1.011,121,1.627,128,2.388,158,1.288,203,1.84,215,1.92,240,1.997,241,2.356,246,2.878,247,1.288,251,3.195,295,2.093,305,3.592,308,2.297,310,2.637,314,3.592,324,2.637,331,2.297,332,3.614,334,2.637,347,2.637,356,3.614,357,2.297,358,2.297,359,2.637,445,2.637,478,3.148,544,3.614,573,2.637,574,4.93,575,3.153,576,3.153,577,3.153,578,3.153,579,3.153,580,3.153,581,3.153,582,3.153,583,3.153,584,3.153]],["title/injectables/ValidationPipe.html",[91,0.623,585,2.328]],["body/injectables/ValidationPipe.html",[3,0.216,4,0.216,5,0.216,7,0.292,9,1.391,10,0.519,11,0.031,12,0.565,15,0.253,16,0.071,20,0.798,21,1.35,23,0.021,24,0.021,41,1.185,45,0.703,47,1.092,48,0.846,49,0.455,50,1.092,52,1.092,89,1.851,91,0.846,92,1.295,98,1.092,101,0.375,102,1.464,112,1.194,116,2.197,117,1.718,119,1.101,158,1.295,207,1.851,222,3.445,250,2.055,270,3.602,284,2.31,295,1.536,358,2.31,389,3.628,514,2.31,585,3.16,586,2.652,587,4.945,588,4.338,589,4.338,590,4.338,591,4.338,592,3.171,593,4.945,594,4.338,595,3.171,596,5.317,597,3.171,598,4.338,599,3.171,600,2.652,601,3.171,602,3.171,603,3.171,604,3.171,605,3.171,606,3.171,607,3.171,608,3.171,609,3.171]],["title/coverage.html",[610,3.177]],["body/coverage.html",[0,2.037,1,1.773,5,0.186,6,2.289,11,0.031,13,1.451,16,0.076,23,0.019,24,0.019,49,0.287,58,1.993,61,0.634,64,2.284,66,0.877,68,2.284,70,1.118,72,1.773,91,1.126,93,2.289,96,1.325,97,2.851,122,1.325,132,1.993,134,2.289,158,1.118,164,1.451,165,2.289,211,2.289,237,1.597,238,2.289,240,1.72,253,1.993,254,1.993,256,2.289,275,1.993,279,1.773,280,1.773,282,2.289,290,1.773,291,2.289,298,2.851,335,2.536,360,1.773,361,2.289,371,1.597,378,1.451,387,2.289,405,2.851,427,2.289,451,1.773,452,2.414,453,2.289,463,2.289,479,1.451,499,2.289,547,1.773,548,2.289,554,1.451,563,2.289,573,2.289,585,1.993,586,2.289,610,1.993,611,2.736,612,2.736,613,2.736,614,2.289,615,4.411,616,6.198,617,6.099,618,2.736,619,2.736,620,5.776,621,5.776,622,2.736,623,2.736,624,2.289,625,2.736,626,2.736,627,2.289,628,2.289,629,2.736,630,2.736,631,2.289,632,3.273,633,2.289,634,2.736,635,2.736,636,2.736,637,2.736,638,2.736,639,2.736,640,2.736,641,2.736,642,2.289,643,2.289,644,2.736]],["title/dependencies.html",[28,1.861,645,2.669]],["body/dependencies.html",[11,0.031,12,0.702,16,0.072,23,0.024,24,0.024,28,1.909,56,1.484,114,1.264,147,2.655,166,2.872,189,3.296,197,2.872,247,1.61,250,2.554,272,3.296,273,3.296,283,2.554,440,3.296,600,3.296,646,3.942,647,3.942,648,5.792,649,3.942,650,3.942,651,3.942,652,3.942,653,3.942,654,3.942,655,3.942,656,3.942,657,3.942,658,3.942,659,3.942,660,3.942,661,3.942,662,3.942,663,3.942,664,3.942,665,3.942,666,3.942,667,3.942,668,3.942,669,3.942,670,3.942,671,3.942]],["title/miscellaneous/functions.html",[672,1.729,673,3.214]],["body/miscellaneous/functions.html",[7,0.398,9,1.386,11,0.028,23,0.025,24,0.025,47,1.088,48,0.843,49,0.454,50,1.088,52,1.088,98,1.088,101,0.512,180,4.437,182,3.615,183,3.615,283,3.438,286,1.627,631,3.615,632,3.615,633,4.437,642,3.615,643,4.801,672,2.801,673,3.615,674,4.322,675,4.322,676,4.322,677,4.322,678,3.615,679,4.322,680,5.305,681,3.149,682,4.322,683,4.322,684,4.322,685,4.322]],["title/index.html",[101,0.316,686,2.669,687,2.669]],["body/index.html",[4,0.245,7,0.333,11,0.031,23,0.022,24,0.022,106,1.914,137,3.02,286,1.359,340,2.631,610,2.631,678,3.02,681,2.631,688,3.611,689,3.611,690,4.733,691,3.611,692,3.611,693,3.611,694,3.611,695,3.611,696,3.611,697,5.28,698,3.611,699,3.611,700,6.083,701,3.611,702,3.611,703,5.969,704,3.611,705,4.733,706,3.611,707,3.611,708,3.611,709,3.611,710,4.733,711,4.733,712,3.611,713,3.611,714,3.611,715,4.733,716,4.733,717,3.611,718,3.611,719,3.611,720,3.611,721,3.02,722,3.611,723,3.611,724,3.611,725,3.611,726,3.611,727,3.611,728,3.611,729,3.611,730,3.611,731,3.611,732,3.611,733,3.611,734,3.611,735,3.611,736,3.611,737,3.611,738,3.611]],["title/modules.html",[27,2.112]],["body/modules.html",[11,0.026,23,0.026,24,0.026,26,3.035,27,2.269,32,2.734,33,2.734,34,2.734,721,5.143,739,6.15,740,6.15,741,6.15]],["title/overview.html",[742,3.647]],["body/overview.html",[2,1.504,11,0.03,13,2.826,23,0.023,24,0.023,26,4.095,27,1.783,28,2.322,29,3.079,30,3.079,31,3.079,32,3.417,33,3.656,34,3.417,35,2.798,36,2.149,37,2.149,86,2.149,92,1.504,96,2.581,122,2.581,133,1.952,253,2.682,279,2.386,378,2.826,393,3.079,394,3.079,479,2.826,493,3.079,494,3.079,529,4.009,536,3.079,554,2.826,558,3.079,559,3.079,742,3.079,743,4.794,744,3.682,745,3.682]],["title/miscellaneous/variables.html",[672,1.729,746,3.214]],["body/miscellaneous/variables.html",[3,0.314,7,0.32,11,0.03,23,0.022,24,0.022,42,2.907,49,0.485,58,3.362,76,2.253,78,2.532,80,2.532,82,2.747,84,2.029,98,1.389,99,2.253,100,2.302,101,0.411,114,1.115,178,1.207,221,4.805,222,3.723,275,4.186,280,2.253,283,2.253,286,1.738,287,2.907,288,2.907,289,2.907,290,2.253,298,2.532,301,2.694,335,3.827,336,3.362,344,3.362,405,2.532,614,2.907,615,3.86,624,2.907,627,2.907,628,3.86,672,2.253,681,2.532,746,2.907,747,3.476,748,3.476,749,3.476,750,3.476,751,3.476,752,3.476,753,3.476,754,3.476,755,3.476,756,4.616,757,3.476,758,3.476,759,3.476,760,3.476,761,4.616,762,3.476,763,3.476]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":606,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["0.0.5",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":529,"title":{},"body":{"injectables/VaccineDataService.html":{},"overview.html":{}}}],["1.0",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.4.6",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":354,"title":{},"body":{"entities/User.html":{}}}],["100",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":534,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["2.29.1",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":536,"title":{},"body":{"injectables/VaccineDataService.html":{},"overview.html":{}}}],["3.0.2",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":404,"title":{},"body":{"modules/UserModule.html":{}}}],["4",{"_index":743,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":745,"title":{},"body":{"overview.html":{}}}],["5.2.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":744,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["a.dosenumber",{"_index":530,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["aadhaar",{"_index":467,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["aadhaarnumber",{"_index":111,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"classes/MaintainanceEntity.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["aadhaarnumber=${getuser.aadhaarnumber",{"_index":525,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["add",{"_index":462,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{}}}],["added",{"_index":568,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["addvaccine",{"_index":550,"title":{},"body":{"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{}}}],["addvaccine(@body",{"_index":556,"title":{},"body":{"controllers/VaccineNameController.html":{}}}],["addvaccine(data",{"_index":551,"title":{},"body":{"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{}}}],["addvaccinedata",{"_index":454,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["addvaccinedata(@body",{"_index":483,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["addvaccinedata(data",{"_index":459,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["addvaccinedata(vaccinedata",{"_index":355,"title":{},"body":{"entities/User.html":{}}}],["addvaccinedate(vaccinedata",{"_index":584,"title":{},"body":{"entities/VaccineNames.html":{}}}],["admin",{"_index":566,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["affectedforcovid",{"_index":302,"title":{},"body":{"entities/User.html":{}}}],["agent",{"_index":230,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["already",{"_index":570,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["amazing",{"_index":722,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":246,"title":{},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{}}}],["apis",{"_index":258,"title":{},"body":{"guards/RolesGuard.html":{}}}],["apitags",{"_index":377,"title":{},"body":{"controllers/UserController.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{}}}],["apitags('user",{"_index":381,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('vaccine",{"_index":481,"title":{},"body":{"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{}}}],["app",{"_index":681,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":696,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":26,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":13,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":596,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":142,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":358,"title":{},"body":{"entities/User.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{}}}],["async",{"_index":102,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{}}}],["author",{"_index":731,"title":{},"body":{"index.html":{}}}],["avaliabale",{"_index":502,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["avaliable",{"_index":301,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/VaccineNameService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":119,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}}}],["backers",{"_index":723,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":514,"title":{},"body":{"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('vaccine",{"_index":540,"title":{},"body":{"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{}}}],["badrequestexception('validation",{"_index":607,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["based",{"_index":213,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["bcrypt",{"_index":335,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(data.password",{"_index":421,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(this.password",{"_index":353,"title":{},"body":{"entities/User.html":{}}}],["bcryptjs",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["beforeinsert",{"_index":331,"title":{},"body":{"entities/User.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{}}}],["body",{"_index":374,"title":{},"body":{"controllers/UserController.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{}}}],["boolean",{"_index":270,"title":{},"body":{"guards/RolesGuard.html":{},"entities/User.html":{},"injectables/ValidationPipe.html":{}}}],["booster",{"_index":537,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["bootstrap",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":741,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":739,"title":{},"body":{"modules.html":{}}}],["building",{"_index":691,"title":{},"body":{"index.html":{}}}],["business",{"_index":406,"title":{},"body":{"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{}}}],["canactivate",{"_index":261,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":266,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cascade",{"_index":326,"title":{},"body":{"entities/User.html":{}}}],["catch",{"_index":139,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{}}}],["catch(exception",{"_index":140,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":148,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["changedate",{"_index":445,"title":{},"body":{"entities/VaccineData.html":{},"entities/VaccineNames.html":{}}}],["class",{"_index":16,"title":{"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"classes/MaintainanceEntity.html":{},"classes/TypeOrmInterface.html":{},"classes/UserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":133,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"classes/MaintainanceEntity.html":{},"classes/TypeOrmInterface.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["clear",{"_index":190,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["cluster_appmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":393,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":394,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_vaccinedatamodule",{"_index":493,"title":{},"body":{"modules/VaccineDataModule.html":{},"overview.html":{}}}],["cluster_vaccinedatamodule_providers",{"_index":494,"title":{},"body":{"modules/VaccineDataModule.html":{},"overview.html":{}}}],["cluster_vaccinenamemodule",{"_index":558,"title":{},"body":{"modules/VaccineNameModule.html":{},"overview.html":{}}}],["cluster_vaccinenamemodule_providers",{"_index":559,"title":{},"body":{"modules/VaccineNameModule.html":{},"overview.html":{}}}],["column",{"_index":251,"title":{},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{}}}],["column()@apiproperty",{"_index":308,"title":{},"body":{"entities/User.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{}}}],["column()@apiproperty()@isstring",{"_index":244,"title":{},"body":{"classes/MaintainanceEntity.html":{}}}],["column()@apiproperty()@isstring()@minlength(8)@maxlength(20)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":316,"title":{},"body":{"entities/User.html":{}}}],["column()@apiproperty()@maxlength(12",{"_index":242,"title":{},"body":{"classes/MaintainanceEntity.html":{}}}],["column({unique",{"_index":310,"title":{},"body":{"entities/User.html":{},"entities/VaccineNames.html":{}}}],["columns",{"_index":300,"title":{},"body":{"entities/User.html":{}}}],["commom",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common/middleware/logger.middleware",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["common/providers/find.service",{"_index":497,"title":{},"body":{"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{}}}],["common/providers/jwt.service",{"_index":398,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["common/typeorm/typeorm.config",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configurations",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configure(consumer",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":117,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":104,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{}}}],["constructor(jwtservice",{"_index":174,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["constructor(private",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/JwtServiceClass.html":{},"controllers/UserController.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{}}}],["constructor(reflecter",{"_index":262,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(userrepository",{"_index":105,"title":{},"body":{"injectables/FindUser.html":{},"injectables/UserService.html":{}}}],["constructor(vaccinedatarepository",{"_index":503,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["constructor(vaccinenamerepository",{"_index":129,"title":{},"body":{"injectables/FindVaccineName.html":{},"injectables/VaccineNameService.html":{}}}],["consumer",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["contentlength",{"_index":232,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["context",{"_index":269,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":277,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{},"coverage.html":{}}}],["controller('user",{"_index":382,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('vaccine",{"_index":482,"title":{},"body":{"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"overview.html":{}}}],["cookie",{"_index":189,"title":{},"body":{"classes/JwtServiceClass.html":{},"dependencies.html":{}}}],["coverage",{"_index":610,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covid",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cowin_user_details",{"_index":345,"title":{},"body":{"entities/User.html":{}}}],["cowinapp",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":180,"title":{},"body":{"classes/JwtServiceClass.html":{},"miscellaneous/functions.html":{}}}],["createdocument",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createjwttoken",{"_index":171,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["createjwttoken(response",{"_index":177,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["createuser",{"_index":363,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":383,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(data",{"_index":365,"title":{},"body":{"controllers/UserController.html":{}}}],["credentials",{"_index":424,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":149,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":152,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":151,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["custom",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":178,"title":{},"body":{"classes/JwtServiceClass.html":{},"classes/TypeOrmInterface.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"miscellaneous/variables.html":{}}}],["data.aadhaarnumber",{"_index":200,"title":{},"body":{"classes/JwtServiceClass.html":{},"injectables/UserService.html":{}}}],["data.controller",{"_index":496,"title":{},"body":{"modules/VaccineDataModule.html":{}}}],["data.controller.ts",{"_index":453,"title":{},"body":{"controllers/VaccineDataController.html":{},"coverage.html":{}}}],["data.controller.ts:20",{"_index":461,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["data.controller.ts:30",{"_index":466,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["data.controller.ts:40",{"_index":470,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["data.controller.ts:50",{"_index":474,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["data.controller.ts:60",{"_index":477,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["data.dosenumber",{"_index":528,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["data.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["data.module.ts",{"_index":495,"title":{},"body":{"modules/VaccineDataModule.html":{}}}],["data.service",{"_index":480,"title":{},"body":{"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{}}}],["data.service.ts",{"_index":499,"title":{},"body":{"injectables/VaccineDataService.html":{},"coverage.html":{}}}],["data.service.ts:101",{"_index":512,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["data.service.ts:19",{"_index":504,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["data.service.ts:32",{"_index":506,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["data.service.ts:72",{"_index":509,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["data.service.ts:83",{"_index":510,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["data.service.ts:92",{"_index":511,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["data.vaccinename",{"_index":519,"title":{},"body":{"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{}}}],["data/vaccine",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"coverage.html":{}}}],["database",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"classes/TypeOrmInterface.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":478,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"entities/VaccineNames.html":{}}}],["date().toisostring",{"_index":159,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["declared",{"_index":285,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{}}}],["decorator",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":241,"title":{},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{},"entities/VaccineNames.html":{}}}],["default",{"_index":221,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":188,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["deletetoken",{"_index":172,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["deletetoken(response",{"_index":186,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["dependencies",{"_index":28,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":702,"title":{},"body":{"index.html":{}}}],["disable",{"_index":338,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["display",{"_index":471,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["document",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":539,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["dose",{"_index":538,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["dosedate",{"_index":428,"title":{},"body":{"entities/VaccineData.html":{},"injectables/VaccineDataService.html":{}}}],["dosenumber",{"_index":429,"title":{},"body":{"entities/VaccineData.html":{},"injectables/VaccineDataService.html":{}}}],["dummy",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["e2e",{"_index":712,"title":{},"body":{"index.html":{}}}],["effectivedate",{"_index":574,"title":{},"body":{"entities/VaccineNames.html":{}}}],["efficient",{"_index":692,"title":{},"body":{"index.html":{}}}],["email",{"_index":303,"title":{},"body":{"entities/User.html":{}}}],["entire",{"_index":136,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["entities",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{},"overview.html":{}}}],["entities/vaccine.data.entity",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{}}}],["entities/vaccine.name.entity",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{}}}],["entity",{"_index":240,"title":{"entities/User.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{}},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{},"coverage.html":{}}}],["error",{"_index":206,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["errors",{"_index":603,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":605,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["eslint",{"_index":337,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["eslint/no",{"_index":341,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["exception",{"_index":144,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":154,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":163,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":138,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptions",{"_index":135,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["execution",{"_index":677,"title":{},"body":{"miscellaneous/functions.html":{}}}],["executioncontext",{"_index":267,"title":{},"body":{"guards/RolesGuard.html":{}}}],["exist",{"_index":571,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["expiresin",{"_index":403,"title":{},"body":{"modules/UserModule.html":{}}}],["export",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{}}}],["express",{"_index":147,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["extends",{"_index":346,"title":{},"body":{"entities/User.html":{},"entities/VaccineData.html":{}}}],["failed",{"_index":608,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["false",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["find",{"_index":99,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["finduser",{"_index":96,"title":{"injectables/FindUser.html":{}},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"coverage.html":{},"overview.html":{}}}],["findvaccinename",{"_index":122,"title":{"injectables/FindVaccineName.html":{}},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"coverage.html":{},"overview.html":{}}}],["findvaccinename(name",{"_index":125,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{}}}],["form",{"_index":507,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["framework",{"_index":690,"title":{},"body":{"index.html":{}}}],["fully",{"_index":535,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["function",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":673,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":304,"title":{},"body":{"entities/User.html":{}}}],["generate",{"_index":169,"title":{},"body":{"classes/JwtServiceClass.html":{},"injectables/UserService.html":{}}}],["get('getdatabasedondate/:date",{"_index":476,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["get('getdatabasedonstatus/:status",{"_index":469,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["get('getdatabasedonvaccine/:vaccinename",{"_index":473,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["get('getvaccinebyaadhhaar/:aadhaarnumber",{"_index":465,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["getdatabyaadhaar",{"_index":455,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["getdatabyaadhaar(@param('aadhaarnumber",{"_index":485,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["getdatabyaadhaar(aadhaarnumber",{"_index":464,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["getdatabystatus",{"_index":456,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["getdatabystatus(@param('status",{"_index":487,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["getdatabystatus(status",{"_index":468,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["getdatabyvaccine",{"_index":457,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["getdatabyvaccine(@param('vaccinename",{"_index":489,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["getdatabyvaccine(vaccinename",{"_index":472,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["getdosenumber",{"_index":520,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["getdosenumber[0",{"_index":526,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["gethello",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmanager",{"_index":515,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["getmanager().query",{"_index":521,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["getting",{"_index":686,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":118,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{}}}],["getuser.password",{"_index":422,"title":{},"body":{"injectables/UserService.html":{}}}],["getvaccine",{"_index":569,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["getvaccinebydate",{"_index":458,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["getvaccinebydate(@param('date",{"_index":491,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["getvaccinebydate(date",{"_index":475,"title":{},"body":{"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["getvaccinename",{"_index":126,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/VaccineDataService.html":{}}}],["grow",{"_index":718,"title":{},"body":{"index.html":{}}}],["guard",{"_index":253,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":255,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hash",{"_index":336,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":286,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/TypeOrmInterface.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":150,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":141,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":132,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httponly",{"_index":202,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["https://nestjs.com",{"_index":735,"title":{},"body":{"index.html":{}}}],["id",{"_index":305,"title":{},"body":{"entities/User.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{}}}],["identifier",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{}}}],["imported",{"_index":182,"title":{},"body":{"classes/JwtServiceClass.html":{},"miscellaneous/functions.html":{}}}],["imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{}}}],["index",{"_index":101,"title":{"index.html":{}},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":91,"title":{"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectrepository",{"_index":113,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{}}}],["injectrepository(user",{"_index":115,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/UserService.html":{}}}],["injectrepository(vaccinedata",{"_index":516,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["injectrepository(vaccinenames",{"_index":123,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/VaccineNameService.html":{}}}],["input",{"_index":390,"title":{},"body":{"classes/UserDto.html":{}}}],["inputs",{"_index":588,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["installation",{"_index":699,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":701,"title":{},"body":{"index.html":{}}}],["interface",{"_index":279,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":281,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["invalid",{"_index":541,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["ip",{"_index":226,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["isemail",{"_index":328,"title":{},"body":{"entities/User.html":{}}}],["isstring",{"_index":248,"title":{},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{}}}],["join",{"_index":725,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":441,"title":{},"body":{"entities/VaccineData.html":{}}}],["jwt",{"_index":166,"title":{},"body":{"classes/JwtServiceClass.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["jwtmodule",{"_index":397,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":400,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtservice",{"_index":175,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["jwtserviceclass",{"_index":164,"title":{"classes/JwtServiceClass.html":{}},"body":{"classes/JwtServiceClass.html":{},"guards/RolesGuard.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["kamil",{"_index":732,"title":{},"body":{"index.html":{}}}],["length",{"_index":234,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["library",{"_index":183,"title":{},"body":{"classes/JwtServiceClass.html":{},"miscellaneous/functions.html":{}}}],["license",{"_index":738,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":716,"title":{},"body":{"index.html":{}}}],["line",{"_index":339,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["localhost",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":212,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger(loggermiddleware.name",{"_index":223,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["loggermiddleware",{"_index":72,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["logics",{"_index":407,"title":{},"body":{"injectables/UserService.html":{},"injectables/VaccineNameService.html":{}}}],["logies",{"_index":501,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["login",{"_index":411,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuser",{"_index":364,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["loginuser(data",{"_index":370,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logout",{"_index":210,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["main",{"_index":676,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maintainance",{"_index":239,"title":{},"body":{"classes/MaintainanceEntity.html":{}}}],["maintainance.entity",{"_index":333,"title":{},"body":{"entities/User.html":{},"entities/VaccineData.html":{}}}],["maintainanceentity",{"_index":237,"title":{"classes/MaintainanceEntity.html":{}},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{},"entities/VaccineData.html":{},"coverage.html":{}}}],["manytoone",{"_index":442,"title":{},"body":{"entities/VaccineData.html":{}}}],["manytoone(undefined",{"_index":434,"title":{},"body":{"entities/VaccineData.html":{}}}],["match",{"_index":420,"title":{},"body":{"injectables/UserService.html":{}}}],["matches",{"_index":329,"title":{},"body":{"entities/User.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":350,"title":{},"body":{"entities/User.html":{}}}],["matching",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":249,"title":{},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{}}}],["maxlength(12",{"_index":252,"title":{},"body":{"classes/MaintainanceEntity.html":{}}}],["maxlength(20",{"_index":349,"title":{},"body":{"entities/User.html":{}}}],["message",{"_index":162,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"entities/User.html":{}}}],["metadata",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":593,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}}}],["middleware",{"_index":214,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["middlewareconsumer",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["minlength",{"_index":330,"title":{},"body":{"entities/User.html":{}}}],["minlength(8",{"_index":348,"title":{},"body":{"entities/User.html":{}}}],["miscellaneous",{"_index":672,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":715,"title":{},"body":{"index.html":{}}}],["mm",{"_index":582,"title":{},"body":{"entities/VaccineNames.html":{}}}],["mode",{"_index":705,"title":{},"body":{"index.html":{}}}],["module",{"_index":25,"title":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{}}}],["modules",{"_index":27,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/user/user.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaccine",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":440,"title":{},"body":{"entities/VaccineData.html":{},"dependencies.html":{}}}],["moment().format('mmm",{"_index":447,"title":{},"body":{"entities/VaccineData.html":{}}}],["moment(this.effectivedate).format('dd",{"_index":581,"title":{},"body":{"entities/VaccineNames.html":{}}}],["more",{"_index":728,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":733,"title":{},"body":{"index.html":{}}}],["name",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["name.controller",{"_index":561,"title":{},"body":{"modules/VaccineNameModule.html":{}}}],["name.controller.ts",{"_index":548,"title":{},"body":{"controllers/VaccineNameController.html":{},"coverage.html":{}}}],["name.controller.ts:19",{"_index":553,"title":{},"body":{"controllers/VaccineNameController.html":{}}}],["name.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["name.module.ts",{"_index":560,"title":{},"body":{"modules/VaccineNameModule.html":{}}}],["name.service",{"_index":555,"title":{},"body":{"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{}}}],["name.service.ts",{"_index":563,"title":{},"body":{"injectables/VaccineNameService.html":{},"coverage.html":{}}}],["name.service.ts:20",{"_index":565,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["name.service.ts:9",{"_index":564,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["name/vaccine",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"coverage.html":{}}}],["names",{"_index":549,"title":{},"body":{"controllers/VaccineNameController.html":{}}}],["nest",{"_index":697,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":737,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/axios",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":272,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":197,"title":{},"body":{"classes/JwtServiceClass.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":247,"title":{},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{},"entities/VaccineNames.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":225,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":158,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":218,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["nextfunction",{"_index":219,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":689,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":513,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["notfoundexception('incorrect",{"_index":527,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["nothing",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":700,"title":{},"body":{"index.html":{}}}],["null",{"_index":357,"title":{},"body":{"entities/User.html":{},"injectables/VaccineDataService.html":{},"entities/VaccineNames.html":{}}}],["number",{"_index":295,"title":{},"body":{"classes/TypeOrmInterface.html":{},"entities/User.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":389,"title":{},"body":{"classes/UserDto.html":{},"injectables/ValidationPipe.html":{}}}],["object.assign(user",{"_index":418,"title":{},"body":{"injectables/UserService.html":{}}}],["observable",{"_index":271,"title":{},"body":{"guards/RolesGuard.html":{}}}],["onetomany",{"_index":332,"title":{},"body":{"entities/User.html":{},"entities/VaccineNames.html":{}}}],["onetomany(undefined",{"_index":324,"title":{},"body":{"entities/User.html":{},"entities/VaccineNames.html":{}}}],["open",{"_index":717,"title":{},"body":{"index.html":{}}}],["openapiobject",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["originalurl",{"_index":227,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["out",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{},"overview.html":{}}}],["outer",{"_index":259,"title":{},"body":{"guards/RolesGuard.html":{}}}],["output",{"_index":567,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["overview",{"_index":742,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":645,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":198,"title":{},"body":{"classes/JwtServiceClass.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["partially",{"_index":532,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["passport",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["passthrough",{"_index":385,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":160,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["persons",{"_index":260,"title":{},"body":{"guards/RolesGuard.html":{}}}],["phonenumber",{"_index":306,"title":{},"body":{"entities/User.html":{}}}],["pipetransform",{"_index":598,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["place",{"_index":168,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["plaintoclass",{"_index":599,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":602,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":726,"title":{},"body":{"index.html":{}}}],["port",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/TypeOrmInterface.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":375,"title":{},"body":{"controllers/UserController.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{}}}],["post('addvaccine",{"_index":552,"title":{},"body":{"controllers/VaccineNameController.html":{}}}],["post('addvaccinedata",{"_index":460,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["post('login",{"_index":372,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register",{"_index":366,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":362,"title":{},"body":{"controllers/UserController.html":{},"controllers/VaccineDataController.html":{},"controllers/VaccineNameController.html":{}}}],["primarygeneratedcolumn",{"_index":314,"title":{},"body":{"entities/User.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{}}}],["private",{"_index":116,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":707,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":688,"title":{},"body":{"index.html":{}}}],["project",{"_index":137,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"index.html":{}}}],["promise",{"_index":185,"title":{},"body":{"classes/JwtServiceClass.html":{},"guards/RolesGuard.html":{}}}],["properties",{"_index":215,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/VaccineData.html":{},"entities/VaccineNames.html":{}}}],["protect",{"_index":257,"title":{},"body":{"guards/RolesGuard.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{}}}],["providers/jwt.service",{"_index":274,"title":{},"body":{"guards/RolesGuard.html":{}}}],["read",{"_index":727,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{}}}],["recived",{"_index":196,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["recoverfromcovid",{"_index":307,"title":{},"body":{"entities/User.html":{}}}],["reflect",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["reflecter",{"_index":265,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reflector",{"_index":263,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":368,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registeruser",{"_index":408,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser(data",{"_index":414,"title":{},"body":{"injectables/UserService.html":{}}}],["related",{"_index":100,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":106,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"index.html":{}}}],["request",{"_index":145,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["request.get('user",{"_index":229,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request.url",{"_index":161,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["require('bcryptjs",{"_index":344,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":299,"title":{},"body":{"entities/User.html":{}}}],["requires",{"_index":343,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["res",{"_index":376,"title":{},"body":{"controllers/UserController.html":{}}}],["reset",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{},"overview.html":{}}}],["response",{"_index":146,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["response.clearcookie('jwt",{"_index":208,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["response.cookie('jwt",{"_index":201,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["response.get('content",{"_index":233,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.on('finish",{"_index":231,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.status(status).json",{"_index":155,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":426,"title":{},"body":{"injectables/UserService.html":{}}}],["results",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":275,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":254,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["root",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":703,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":273,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["save",{"_index":369,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineNameController.html":{}}}],["scalable",{"_index":693,"title":{},"body":{"index.html":{}}}],["secret",{"_index":401,"title":{},"body":{"modules/UserModule.html":{}}}],["select",{"_index":522,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["server",{"_index":694,"title":{},"body":{"index.html":{}}}],["service",{"_index":167,"title":{},"body":{"classes/JwtServiceClass.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{}}}],["setmetadata('roles",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":191,"title":{},"body":{"classes/JwtServiceClass.html":{},"injectables/VaccineNameService.html":{}}}],["side",{"_index":695,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":402,"title":{},"body":{"modules/UserModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":720,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorators.ts",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeorm.config.ts",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:34",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/common/decorators/roles.decorators.ts",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":134,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:13",{"_index":143,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/common/guards/roles.guards.ts",{"_index":256,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/roles.guards.ts:14",{"_index":268,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guards.ts:9",{"_index":264,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/middleware/logger.middleware.ts",{"_index":211,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/middleware/logger.middleware.ts:10",{"_index":220,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/middleware/logger.middleware.ts:8",{"_index":224,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/pipes/validation.pipes.ts",{"_index":586,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validation.pipes.ts:14",{"_index":597,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipes/validation.pipes.ts:26",{"_index":592,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/providers/find.service.ts",{"_index":97,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"coverage.html":{}}}],["src/common/providers/find.service.ts:10",{"_index":107,"title":{},"body":{"injectables/FindUser.html":{}}}],["src/common/providers/find.service.ts:15",{"_index":110,"title":{},"body":{"injectables/FindUser.html":{}}}],["src/common/providers/find.service.ts:26",{"_index":130,"title":{},"body":{"injectables/FindVaccineName.html":{}}}],["src/common/providers/find.service.ts:32",{"_index":131,"title":{},"body":{"injectables/FindVaccineName.html":{}}}],["src/common/providers/jwt.service.ts",{"_index":165,"title":{},"body":{"classes/JwtServiceClass.html":{},"coverage.html":{}}}],["src/common/providers/jwt.service.ts:17",{"_index":179,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["src/common/providers/jwt.service.ts:30",{"_index":194,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["src/common/providers/jwt.service.ts:44",{"_index":187,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["src/common/providers/jwt.service.ts:8",{"_index":176,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["src/common/typeorm/typeorm.config.ts",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/typeorm/typeorm.interface.ts",{"_index":291,"title":{},"body":{"classes/TypeOrmInterface.html":{},"coverage.html":{}}}],["src/common/typeorm/typeorm.interface.ts:5",{"_index":293,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/common/typeorm/typeorm.interface.ts:6",{"_index":296,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/common/typeorm/typeorm.interface.ts:7",{"_index":297,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/common/typeorm/typeorm.interface.ts:8",{"_index":294,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/common/typeorm/typeorm.interface.ts:9",{"_index":292,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/config/swagger/swagger.config.ts",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger/swagger.interface.ts",{"_index":282,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{}}}],["src/config/swagger/swagger.ts",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/entities/maintainance.entity.ts",{"_index":238,"title":{},"body":{"classes/MaintainanceEntity.html":{},"coverage.html":{}}}],["src/entities/maintainance.entity.ts:11",{"_index":245,"title":{},"body":{"classes/MaintainanceEntity.html":{}}}],["src/entities/maintainance.entity.ts:16",{"_index":243,"title":{},"body":{"classes/MaintainanceEntity.html":{}}}],["src/entities/user.entity",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{}}}],["src/entities/user.entity.ts",{"_index":298,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/user.entity.ts:27",{"_index":315,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:32",{"_index":312,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:37",{"_index":322,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:47",{"_index":320,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:51",{"_index":313,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:55",{"_index":309,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:59",{"_index":323,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:69",{"_index":327,"title":{},"body":{"entities/User.html":{}}}],["src/entities/vaccine.data.entity.ts",{"_index":427,"title":{},"body":{"entities/VaccineData.html":{},"coverage.html":{}}}],["src/entities/vaccine.data.entity.ts:20",{"_index":432,"title":{},"body":{"entities/VaccineData.html":{}}}],["src/entities/vaccine.data.entity.ts:24",{"_index":430,"title":{},"body":{"entities/VaccineData.html":{}}}],["src/entities/vaccine.data.entity.ts:28",{"_index":431,"title":{},"body":{"entities/VaccineData.html":{}}}],["src/entities/vaccine.data.entity.ts:32",{"_index":437,"title":{},"body":{"entities/VaccineData.html":{}}}],["src/entities/vaccine.data.entity.ts:35",{"_index":433,"title":{},"body":{"entities/VaccineData.html":{}}}],["src/entities/vaccine.data.entity.ts:44",{"_index":436,"title":{},"body":{"entities/VaccineData.html":{}}}],["src/entities/vaccine.data.entity.ts:48",{"_index":439,"title":{},"body":{"entities/VaccineData.html":{}}}],["src/entities/vaccine.name.entity.ts",{"_index":573,"title":{},"body":{"entities/VaccineNames.html":{},"coverage.html":{}}}],["src/entities/vaccine.name.entity.ts:10",{"_index":576,"title":{},"body":{"entities/VaccineNames.html":{}}}],["src/entities/vaccine.name.entity.ts:14",{"_index":579,"title":{},"body":{"entities/VaccineNames.html":{}}}],["src/entities/vaccine.name.entity.ts:18",{"_index":575,"title":{},"body":{"entities/VaccineNames.html":{}}}],["src/entities/vaccine.name.entity.ts:26",{"_index":577,"title":{},"body":{"entities/VaccineNames.html":{}}}],["src/main.ts",{"_index":642,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/user/user.controller.ts",{"_index":361,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:19",{"_index":367,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:24",{"_index":373,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":395,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":405,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/user.service.ts:15",{"_index":409,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:26",{"_index":415,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:37",{"_index":410,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/userdto/user.dto.ts",{"_index":387,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/user/userdto/user.dto.ts:10",{"_index":392,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/userdto/user.dto.ts:7",{"_index":391,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/vaccine",{"_index":452,"title":{},"body":{"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"coverage.html":{}}}],["start",{"_index":678,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["start:dev",{"_index":706,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":708,"title":{},"body":{"index.html":{}}}],["started",{"_index":687,"title":{"index.html":{}},"body":{}}],["starter",{"_index":698,"title":{},"body":{"index.html":{}}}],["statements",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":153,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{}}}],["statuscode",{"_index":156,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["stay",{"_index":729,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"classes/MaintainanceEntity.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"classes/UserDto.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{}}}],["strongpassword",{"_index":351,"title":{},"body":{"entities/User.html":{}}}],["success",{"_index":192,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["successfully",{"_index":209,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["sum(dosenumber",{"_index":523,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["support",{"_index":721,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":740,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":283,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["swagger_config",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":280,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":463,"title":{},"body":{"controllers/VaccineDataController.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":287,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["taken",{"_index":184,"title":{},"body":{"classes/JwtServiceClass.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{}}}],["teken",{"_index":412,"title":{},"body":{"injectables/UserService.html":{}}}],["template",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":711,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":714,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":713,"title":{},"body":{"index.html":{}}}],["tests",{"_index":710,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":719,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["this.dosedate",{"_index":446,"title":{},"body":{"entities/VaccineData.html":{}}}],["this.effectivedate",{"_index":580,"title":{},"body":{"entities/VaccineNames.html":{}}}],["this.finduser.usermethods(data.aadhaarnumber",{"_index":517,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["this.findvaccinename.findvaccinename",{"_index":518,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["this.jwtservice.signasync",{"_index":199,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":205,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["this.jwtserviceclass.createjwttoken(response",{"_index":425,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtserviceclass.verifyjwttoken(roles",{"_index":278,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.logger.log",{"_index":235,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.password",{"_index":352,"title":{},"body":{"entities/User.html":{}}}],["this.reflecter.get('roles",{"_index":276,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.tovalidate(metatype",{"_index":601,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.userrepository.findone",{"_index":120,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/UserService.html":{}}}],["this.userrepository.save(userdata",{"_index":419,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.loginuser(data",{"_index":386,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.registeruser(data",{"_index":384,"title":{},"body":{"controllers/UserController.html":{}}}],["this.vaccinedata",{"_index":356,"title":{},"body":{"entities/User.html":{},"entities/VaccineNames.html":{}}}],["this.vaccinedata.push(vaccinedata",{"_index":359,"title":{},"body":{"entities/User.html":{},"entities/VaccineNames.html":{}}}],["this.vaccinedatarepository.find",{"_index":546,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["this.vaccinedatarepository.save(vaccinedata",{"_index":545,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["this.vaccinedataservice.addvaccinedata(data",{"_index":484,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["this.vaccinedataservice.getdatabyaadhaar(aadhaarnumber",{"_index":486,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["this.vaccinedataservice.getdatabystatus(status",{"_index":488,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["this.vaccinedataservice.getdatabyvaccine(vaccinename",{"_index":490,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["this.vaccinedataservice.getvaccinebydate(date",{"_index":492,"title":{},"body":{"controllers/VaccineDataController.html":{}}}],["this.vaccinenamerepository.findone",{"_index":127,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/VaccineNameService.html":{}}}],["this.vaccinenamerepository.save(data",{"_index":572,"title":{},"body":{"injectables/VaccineNameService.html":{}}}],["this.vaccinenameservice.addvaccine(data",{"_index":557,"title":{},"body":{"controllers/VaccineNameController.html":{}}}],["throw",{"_index":207,"title":{},"body":{"classes/JwtServiceClass.html":{},"injectables/UserService.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":157,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["title",{"_index":288,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":181,"title":{},"body":{"classes/JwtServiceClass.html":{},"injectables/UserService.html":{}}}],["tokens",{"_index":170,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["touch",{"_index":730,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":589,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":591,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transfer",{"_index":388,"title":{},"body":{"classes/UserDto.html":{}}}],["transform",{"_index":590,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":594,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":600,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":203,"title":{},"body":{"classes/JwtServiceClass.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UserController.html":{},"entities/VaccineNames.html":{}}}],["true})@apiproperty",{"_index":578,"title":{},"body":{"entities/VaccineNames.html":{}}}],["true})@apiproperty()@isemail",{"_index":311,"title":{},"body":{"entities/User.html":{}}}],["true})@apiproperty()@isstring",{"_index":321,"title":{},"body":{"entities/User.html":{}}}],["try",{"_index":204,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["twitter",{"_index":736,"title":{},"body":{"index.html":{}}}],["type",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtServiceClass.html":{},"injectables/LoggerMiddleware.html":{},"classes/MaintainanceEntity.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":114,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/MaintainanceEntity.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["typeormconfig",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormconfig.database",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconfig.host",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconfig.password",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconfig.port",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconfig.username",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["typeorminterface",{"_index":290,"title":{"classes/TypeOrmInterface.html":{}},"body":{"classes/TypeOrmInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":399,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([vaccinedata",{"_index":498,"title":{},"body":{"modules/VaccineDataModule.html":{}}}],["typeormmodule.forfeature([vaccinenames",{"_index":562,"title":{},"body":{"modules/VaccineNameModule.html":{}}}],["typeormmodule.forroot",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":284,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":609,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":340,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["ui",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":416,"title":{},"body":{"injectables/UserService.html":{}}}],["unauthorizedexception('incorrect",{"_index":423,"title":{},"body":{"injectables/UserService.html":{}}}],["undefined",{"_index":595,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["unique",{"_index":347,"title":{},"body":{"entities/User.html":{},"entities/VaccineNames.html":{}}}],["unit",{"_index":709,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":112,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{}}}],["updated",{"_index":508,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["use",{"_index":216,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(request",{"_index":217,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["used",{"_index":98,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"injectables/VaccineNameService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":61,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"classes/JwtServiceClass.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"coverage.html":{}}}],["user.addvaccinedata(vaccinedata",{"_index":543,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["user.controller",{"_index":396,"title":{},"body":{"modules/UserModule.html":{}}}],["user.entity",{"_index":443,"title":{},"body":{"entities/VaccineData.html":{}}}],["user.service",{"_index":379,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.vaccinedata",{"_index":449,"title":{},"body":{"entities/VaccineData.html":{}}}],["user.vaccinedata)@joincolumn",{"_index":435,"title":{},"body":{"entities/VaccineData.html":{}}}],["useragent",{"_index":228,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useragent}${ip",{"_index":236,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["usercontroller",{"_index":360,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":417,"title":{},"body":{"injectables/UserService.html":{}}}],["userdto",{"_index":371,"title":{"classes/UserDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdto/user.dto",{"_index":380,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermethods",{"_index":103,"title":{},"body":{"injectables/FindUser.html":{}}}],["usermethods(aadhaarnumber",{"_index":109,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{}}}],["usermodule",{"_index":32,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"classes/TypeOrmInterface.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":108,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":378,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["vaccinated",{"_index":533,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["vaccind",{"_index":500,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["vaccine",{"_index":121,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{}}}],["vaccine.data.entity",{"_index":334,"title":{},"body":{"entities/User.html":{},"entities/VaccineNames.html":{}}}],["vaccine.name.entity",{"_index":444,"title":{},"body":{"entities/VaccineData.html":{}}}],["vaccine_data",{"_index":524,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["vaccinedata",{"_index":70,"title":{"entities/VaccineData.html":{}},"body":{"modules/AppModule.html":{},"entities/User.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"entities/VaccineNames.html":{},"coverage.html":{}}}],["vaccinedata.status",{"_index":531,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["vaccinedata.user",{"_index":325,"title":{},"body":{"entities/User.html":{},"injectables/VaccineDataService.html":{}}}],["vaccinedata.vaccinenames",{"_index":544,"title":{},"body":{"injectables/VaccineDataService.html":{},"entities/VaccineNames.html":{}}}],["vaccinedatacontroller",{"_index":451,"title":{"controllers/VaccineDataController.html":{}},"body":{"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"coverage.html":{}}}],["vaccinedatamodule",{"_index":33,"title":{"modules/VaccineDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VaccineDataModule.html":{},"modules.html":{},"overview.html":{}}}],["vaccinedatarepository",{"_index":505,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["vaccinedataservice",{"_index":479,"title":{"injectables/VaccineDataService.html":{}},"body":{"controllers/VaccineDataController.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"coverage.html":{},"overview.html":{}}}],["vaccinename",{"_index":128,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"entities/VaccineData.html":{},"controllers/VaccineDataController.html":{},"injectables/VaccineDataService.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{}}}],["vaccinenamecontroller",{"_index":547,"title":{"controllers/VaccineNameController.html":{}},"body":{"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"coverage.html":{}}}],["vaccinenamemodule",{"_index":34,"title":{"modules/VaccineNameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VaccineNameModule.html":{},"modules.html":{},"overview.html":{}}}],["vaccinenamerepository",{"_index":124,"title":{},"body":{"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"injectables/VaccineNameService.html":{}}}],["vaccinenames",{"_index":66,"title":{"entities/VaccineNames.html":{}},"body":{"modules/AppModule.html":{},"injectables/FindUser.html":{},"injectables/FindVaccineName.html":{},"entities/VaccineData.html":{},"modules/VaccineDataModule.html":{},"injectables/VaccineDataService.html":{},"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"entities/VaccineNames.html":{},"coverage.html":{}}}],["vaccinenames.addvaccinedate(vaccinedata",{"_index":542,"title":{},"body":{"injectables/VaccineDataService.html":{}}}],["vaccinenames.vaccinedata",{"_index":450,"title":{},"body":{"entities/VaccineData.html":{}}}],["vaccinenames.vaccinedata)@joincolumn",{"_index":438,"title":{},"body":{"entities/VaccineData.html":{}}}],["vaccinenameservice",{"_index":554,"title":{"injectables/VaccineNameService.html":{}},"body":{"controllers/VaccineNameController.html":{},"modules/VaccineNameModule.html":{},"injectables/VaccineNameService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":587,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":604,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":585,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":250,"title":{},"body":{"classes/MaintainanceEntity.html":{},"entities/User.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":222,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/VaccineDataService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":342,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["variable",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":746,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":195,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["verifyjwttoken",{"_index":173,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["verifyjwttoken(token",{"_index":193,"title":{},"body":{"classes/JwtServiceClass.html":{}}}],["version",{"_index":289,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":704,"title":{},"body":{"index.html":{}}}],["weak",{"_index":319,"title":{},"body":{"entities/User.html":{}}}],["website",{"_index":734,"title":{},"body":{"index.html":{}}}],["without",{"_index":413,"title":{},"body":{"injectables/UserService.html":{}}}],["world",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":724,"title":{},"body":{"index.html":{}}}],["yy",{"_index":448,"title":{},"body":{"entities/VaccineData.html":{}}}],["yyyy",{"_index":583,"title":{},"body":{"entities/VaccineNames.html":{}}}],["z",{"_index":318,"title":{},"body":{"entities/User.html":{}}}],["z])(?=.*[a",{"_index":317,"title":{},"body":{"entities/User.html":{}}}],["zoom",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules/VaccineDataModule.html":{},"modules/VaccineNameModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                This is a dummy method\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n/**\n * This is a dummy method\n */\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  // @Get()\n  // getHello(): string {\n  //   return this.appService.getHello();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nVaccineDataModule\n\nVaccineDataModule\n\nAppModule -->\n\nVaccineDataModule->AppModule\n\n\n\n\n\nVaccineNameModule\n\nVaccineNameModule\n\nAppModule -->\n\nVaccineNameModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                        \n                            VaccineDataModule\n                        \n                        \n                            VaccineNameModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmConfig } from './Common/TypeOrm/typeorm.config';\nimport { UserModule } from './Modules/user/user.module';\nimport { User } from 'src/Entities/user.entity';\nimport { VaccineNameModule } from './Modules/vaccine-name/vaccine-name.module';\nimport { VaccineNames } from './Entities/vaccine.name.entity';\nimport { VaccineDataModule } from './Modules/vaccine-data/vaccine-data.module';\nimport { VaccineData } from './Entities/vaccine.data.entity';\nimport { LoggerMiddleware } from './Common/MiddleWare/logger.middleware';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: TypeOrmConfig.host,\n      port: TypeOrmConfig.port,\n      username: TypeOrmConfig.username,\n      password: TypeOrmConfig.password,\n      database: TypeOrmConfig.database,\n      entities: [User, VaccineNames, VaccineData],\n      synchronize: false\n    }),\n    UserModule,\n    VaccineNameModule,\n    VaccineDataModule\n  ],\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a dummy method\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n/**\n * This is a dummy method\n */\n@Injectable()\nexport class AppService {\n  // getHello(): string {\n  //   return 'Hello World!';\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUser.html":{"url":"injectables/FindUser.html","title":"injectable - FindUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/Providers/find.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is used to find the user related info\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                userMethods\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/Common/Providers/find.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userMethods\n                        \n                    \n                \n            \n            \n                \n                    \n                    userMethods(aadhaarnumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Providers/find.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aadhaarnumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from 'src/Entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { VaccineNames } from './../../Entities/vaccine.name.entity';\n/**\n * This class is used to find the user related info\n */\n@Injectable()\nexport class FindUser {\n  constructor(\n    @InjectRepository(User) private readonly userRepository: Repository\n  ) {}\n\n  async userMethods(aadhaarnumber: string) {\n    const getUser = await this.userRepository.findOne({\n      where: [{ aadhaarnumber }]\n    });\n    return getUser;\n  }\n}\n/**\n * This class is used to find the vaccine related info\n */\n@Injectable()\nexport class FindVaccineName {\n  constructor(\n    @InjectRepository(VaccineNames)\n    private readonly vaccineNameRepository: Repository\n  ) {}\n\n  async findVaccineName(name: string) {\n    const getVaccineName = await this.vaccineNameRepository.findOne({\n      vaccineName: name\n    });\n    return getVaccineName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindVaccineName.html":{"url":"injectables/FindVaccineName.html","title":"injectable - FindVaccineName","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindVaccineName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/Providers/find.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is used to find the vaccine related info\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findVaccineName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaccineNameRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/Common/Providers/find.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaccineNameRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findVaccineName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findVaccineName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Providers/find.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from 'src/Entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { VaccineNames } from './../../Entities/vaccine.name.entity';\n/**\n * This class is used to find the user related info\n */\n@Injectable()\nexport class FindUser {\n  constructor(\n    @InjectRepository(User) private readonly userRepository: Repository\n  ) {}\n\n  async userMethods(aadhaarnumber: string) {\n    const getUser = await this.userRepository.findOne({\n      where: [{ aadhaarnumber }]\n    });\n    return getUser;\n  }\n}\n/**\n * This class is used to find the vaccine related info\n */\n@Injectable()\nexport class FindVaccineName {\n  constructor(\n    @InjectRepository(VaccineNames)\n    private readonly vaccineNameRepository: Repository\n  ) {}\n\n  async findVaccineName(name: string) {\n    const getVaccineName = await this.vaccineNameRepository.findOne({\n      vaccineName: name\n    });\n    return getVaccineName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/Filters/exception.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is used to find the exceptions for entire project\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Filters/exception.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n/**\n * This class is used to find the exceptions for entire project\n */\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message: exception.message\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtServiceClass.html":{"url":"classes/JwtServiceClass.html","title":"class - JwtServiceClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtServiceClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/Providers/jwt.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is jwt service method this is the place to generate all jwt tokens\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createJwtToken\n                            \n                            \n                                    Async\n                                deleteToken\n                            \n                            \n                                    Async\n                                verifyJwtToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/Common/Providers/jwt.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createJwtToken(response: Response, data: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Providers/jwt.service.ts:17\n                \n            \n\n\n            \n                \n                    Create jwt token method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is imported from the express library\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteToken(response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Providers/jwt.service.ts:44\n                \n            \n\n\n            \n                \n                    delete jwt token method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is imported from the express library\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        if cookie is clear show success message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyJwtToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Providers/jwt.service.ts:30\n                \n            \n\n\n            \n                \n                    verify jwt token method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is recived from the method\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the verify token\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { User } from 'src/Entities/user.entity';\n\n/**\n * This is jwt service method this is the place to generate all jwt tokens\n */\nexport class JwtServiceClass {\n  constructor(private readonly jwtService: JwtService) {}\n\n  /**\n   * Create jwt token method\n   * @param response is imported from the express library\n   * @param data is taken from the user\n   * @returns the token\n   */\n  async createJwtToken(response: Response, data: User): Promise {\n    const jwt = await this.jwtService.signAsync({\n      aadhaarnumber: data.aadhaarnumber\n    });\n    response.cookie('jwt', jwt, { httpOnly: true });\n    return jwt;\n  }\n\n  /**\n   * verify jwt token method\n   * @param token is recived from the method\n   * @returns the verify token\n   */\n  async verifyJwtToken(token: string): Promise {\n    try {\n      const verify = await this.jwtService.verifyAsync(token);\n      return verify;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * delete jwt token method\n   * @param response is imported from the express library\n   * @returns if cookie is clear show success message\n   */\n  async deleteToken(response: Response) {\n    response.clearCookie('jwt');\n    return {\n      message: 'you are successfully logout'\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/MiddleWare/logger.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                This method is used to return the logger related info based on middleware\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/MiddleWare/logger.middleware.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggerMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/Common/MiddleWare/logger.middleware.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\n/**\n * This method is used to return the logger related info based on middleware\n */\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private logger = new Logger(LoggerMiddleware.name);\n\n  use(request: Request, response: Response, next: NextFunction): void {\n    const { ip, method, originalUrl } = request;\n\n    const userAgent = request.get('user-agent') || '';\n    response.on('finish', () => {\n      const { statusCode } = response;\n      const contentLength = response.get('content-length');\n      this.logger.log(\n        `${method} ${originalUrl} ${statusCode} ${contentLength}-${userAgent}${ip}`\n      );\n      this.logger.log(\n        'info',\n        `${method} ${originalUrl} ${statusCode} ${contentLength}-${userAgent}${ip}`\n      );\n    });\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaintainanceEntity.html":{"url":"classes/MaintainanceEntity.html","title":"class - MaintainanceEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaintainanceEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/maintainance.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a Maintainance entity\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aadhaarnumber\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aadhaarnumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()@MaxLength(12)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/maintainance.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/maintainance.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, MaxLength } from 'class-validator';\nimport { Column } from 'typeorm';\n/**\n * This is a Maintainance entity\n */\nexport class MaintainanceEntity {\n  @Column()\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @Column()\n  @ApiProperty()\n  @MaxLength(12)\n  aadhaarnumber: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Common/Guards/roles.guards.ts\n            \n\n\n                \n                Description\n                \n                \n                    This class is used to protect the Apis from the outer persons\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflecter: Reflector, jwtServiceClass: JwtServiceClass)\n                    \n                \n                        \n                            \n                                Defined in src/Common/Guards/roles.guards.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflecter\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtServiceClass\n                                                  \n                                                        \n                                                                        JwtServiceClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Guards/roles.guards.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { JwtServiceClass } from './../Providers/jwt.service';\n/**\n * This class is used to protect the Apis from the outer persons\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(\n    private readonly reflecter: Reflector,\n    private readonly jwtServiceClass: JwtServiceClass\n  ) {}\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    const roles = this.reflecter.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    if (!this.jwtServiceClass.verifyJwtToken(roles)) {\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerConfig.html":{"url":"interfaces/SwaggerConfig.html","title":"interface - SwaggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Config/Swagger/swagger.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                swagger related types is declared here\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Description\n                                        \n                                \n                                \n                                        \n                                            Tags\n                                        \n                                \n                                \n                                        \n                                            Title\n                                        \n                                \n                                \n                                        \n                                            Version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerConfig {\n  Title: string;\n  Description: string;\n  Version: string;\n  Tags: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeOrmInterface.html":{"url":"classes/TypeOrmInterface.html","title":"class - TypeOrmInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeOrmInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/TypeOrm/typeorm.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                TypeOrm data types Declared here\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                database\n                            \n                            \n                                host\n                            \n                            \n                                password\n                            \n                            \n                                port\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Common/TypeOrm/typeorm.interface.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Common/TypeOrm/typeorm.interface.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Common/TypeOrm/typeorm.interface.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Common/TypeOrm/typeorm.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Common/TypeOrm/typeorm.interface.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TypeOrmInterface {\n  host: string;\n  port: number;\n  username: string;\n  password: string;\n  database: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                This is user entity all required columns are avaliable here\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                affectedForCovid\n                            \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                recoverFromCovid\n                            \n                            \n                                vaccineData\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        affectedForCovid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()@IsString()@MinLength(8)@MaxLength(20)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoverFromCovid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaccineData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, vaccineData => vaccineData.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength\n} from 'class-validator';\nimport {\n  BeforeInsert,\n  Column,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn\n} from 'typeorm';\nimport { MaintainanceEntity } from './maintainance.entity';\nimport { VaccineData } from './vaccine.data.entity';\n/**This bcrypt is used to hash the password */\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs');\n/**\n * This is user entity all required columns are avaliable here\n */\n@Entity({ name: 'cowin_user_Details' })\nexport class User extends MaintainanceEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n  @Column({ unique: true })\n  @ApiProperty()\n  @IsString()\n  phoneNumber: string;\n\n  @Column()\n  @ApiProperty()\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'password too weak'\n  })\n  password: string;\n\n  @Column()\n  @ApiProperty()\n  gender: string;\n\n  @Column()\n  @ApiProperty()\n  affectedForCovid: boolean;\n\n  @Column()\n  @ApiProperty()\n  recoverFromCovid: string;\n\n  @BeforeInsert()\n  async strongPassword() {\n    this.password = await bcrypt.hash(this.password, 10);\n  }\n\n  @OneToMany(() => VaccineData, (vaccineData) => vaccineData.user, {\n    cascade: true\n  })\n  vaccineData: VaccineData[];\n\n  async addVaccineData(vaccineData: VaccineData) {\n    if (this.vaccineData == null) {\n      this.vaccineData = new Array();\n    }\n    this.vaccineData.push(vaccineData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                loginUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/Modules/user/user.controller.ts:19\n                \n            \n\n\n            \n                \n                    This method is used to register the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        save the data in register entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(data: UserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/Modules/user/user.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Res } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/Entities/user.entity';\nimport { UserService } from './user.service';\nimport { UserDto } from './UserDto/user.dto';\nimport { Response } from 'express';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n   * This method is used to register the user\n   * @param data is taken from the user\n   * @returns save the data in register entity\n   */\n  @Post('register')\n  async createUser(@Body() data: User) {\n    return await this.userService.registerUser(data);\n  }\n\n  @Post('login')\n  async loginUser(\n    @Body() data: UserDto,\n    @Res({ passthrough: true }) response: Response\n  ) {\n    return await this.userService.loginUser(data, response);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/user/UserDto/user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                this class is data transfer object only user input data is avaliable here\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aadhaarNumber\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aadhaarNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/user/UserDto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/user/UserDto/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n/**\n * this class is data transfer object only user input data is avaliable here\n */\nexport class UserDto {\n  @ApiProperty()\n  aadhaarNumber: string;\n\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from 'src/Entities/user.entity';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtServiceClass } from './../../Common/Providers/jwt.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    JwtModule.register({\n      secret: 'secret',\n      signOptions: { expiresIn: '3h' }\n    })\n  ],\n\n  providers: [UserService, JwtServiceClass],\n  controllers: [UserController]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is user service class all business logics are avaliable here\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loginUser\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtserviceClass: JwtServiceClass)\n                    \n                \n                        \n                            \n                                Defined in src/Modules/user/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtserviceClass\n                                                  \n                                                        \n                                                                        JwtServiceClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(data: UserDto, response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/user/user.service.ts:37\n                \n            \n\n\n            \n                \n                    This method is used to login the user and generate the jwt token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is teken from the user\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        user without password\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(data: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/user/user.service.ts:26\n                \n            \n\n\n            \n                \n                    This method is used to register the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        save the data in register entity\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from 'src/Entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { UserDto } from './UserDto/user.dto';\nimport { JwtServiceClass } from './../../Common/Providers/jwt.service';\nimport { Response } from 'express';\n/**This bcrypt is used to hash the password */\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs');\n/**\n * This is user service class all business logics are avaliable here\n */\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User) private readonly userRepository: Repository,\n    private readonly jwtserviceClass: JwtServiceClass\n  ) {}\n\n  /**\n   * This method is used to register the user\n   * @param data is taken from the user\n   * @returns save the data in register entity\n   */\n  async registerUser(data: User) {\n    const user = new User();\n    const userData = Object.assign(user, data);\n    return await this.userRepository.save(userData);\n  }\n\n  /**\n   * This method is used to login the user and generate the jwt token\n   * @param data is teken from the user\n   * @returns user without password\n   */\n  async loginUser(data: UserDto, response: Response) {\n    const getUser = await this.userRepository.findOne({\n      aadhaarnumber: data.aadhaarNumber\n    });\n    const match = await bcrypt.compare(data.password, getUser.password);\n    if (!getUser || match == false) {\n      throw new UnauthorizedException('incorrect credentials');\n    }\n    await this.jwtserviceClass.createJwtToken(response, getUser);\n    const { password, ...result } = getUser;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VaccineData.html":{"url":"entities/VaccineData.html","title":"entity - VaccineData","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VaccineData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/vaccine.data.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a vaccine data entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doseDate\n                            \n                            \n                                doseNumber\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                user\n                            \n                            \n                                vaccineName\n                            \n                            \n                                vaccineNames\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        doseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.data.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doseNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.data.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.data.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.data.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.vaccineData)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.data.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.data.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaccineNames\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vaccineNames => vaccineNames.vaccineData)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.data.entity.ts:48\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport moment from 'moment';\nimport {\n  BeforeInsert,\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn\n} from 'typeorm';\nimport { MaintainanceEntity } from './maintainance.entity';\nimport { User } from './user.entity';\nimport { VaccineNames } from './vaccine.name.entity';\n/**\n * This is a vaccine data entity\n */\n@Entity()\nexport class VaccineData extends MaintainanceEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  @ApiProperty()\n  doseDate: string;\n\n  @Column()\n  @ApiProperty()\n  doseNumber: number;\n\n  @Column()\n  @ApiProperty()\n  vaccineName: string;\n\n  @Column()\n  status: string;\n\n  @BeforeInsert()\n  async changeDate() {\n    this.doseDate = moment().format('MMM Do YY');\n  }\n\n  @ManyToOne(() => User, (user) => user.vaccineData)\n  @JoinColumn()\n  user: User;\n\n  @ManyToOne(() => VaccineNames, (vaccineNames) => vaccineNames.vaccineData)\n  @JoinColumn()\n  vaccineNames: VaccineNames;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VaccineDataController.html":{"url":"controllers/VaccineDataController.html","title":"controller - VaccineDataController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VaccineDataController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/vaccine-data/vaccine-data.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vaccine-data\n            \n\n\n            \n                Description\n            \n            \n                This is the vaccine data controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVaccineData\n                            \n                            \n                                    Async\n                                getDataByAadhaar\n                            \n                            \n                                    Async\n                                getDataByStatus\n                            \n                            \n                                    Async\n                                getDataByVaccine\n                            \n                            \n                                    Async\n                                getVaccineBydate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVaccineData\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVaccineData(data: VaccineData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('addVaccineData')\n                \n            \n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.controller.ts:20\n                \n            \n\n\n            \n                \n                    This method is used to add data to the vaccine data table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VaccineData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        add data to the database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDataByAadhaar\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataByAadhaar(aadhaarnumber: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getVaccineByaadhhaar/:aadhaarnumber')\n                \n            \n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.controller.ts:30\n                \n            \n\n\n            \n                \n                    This method is used to get data based on aadhaar number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    aadhaarnumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        all related data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDataByStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataByStatus(status: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getDataBasedOnStatus/:status')\n                \n            \n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.controller.ts:40\n                \n            \n\n\n            \n                \n                    This method is used get data based on status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        display all related data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDataByVaccine\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataByVaccine(VaccineName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getDataBasedOnVaccine/:VaccineName')\n                \n            \n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.controller.ts:50\n                \n            \n\n\n            \n                \n                    This method is used get vaccine based on VaccineName\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    VaccineName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        display all related data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVaccineBydate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccineBydate(date: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getDataBasedOnDate/:date')\n                \n            \n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.controller.ts:60\n                \n            \n\n\n            \n                \n                    This method is used get vaccine based on date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        display all related data\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { VaccineDataService } from './vaccine-data.service';\nimport { VaccineData } from './../../Entities/vaccine.data.entity';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * This is the vaccine data controller\n */\n@ApiTags('vaccine Data')\n@Controller('vaccine-data')\nexport class VaccineDataController {\n  constructor(private readonly vaccineDataService: VaccineDataService) {}\n\n  /**\n   * This method is used to add data to the vaccine data table\n   * @param data is taken from the user\n   * @returns add data to the database\n   */\n  @Post('addVaccineData')\n  async addVaccineData(@Body() data: VaccineData) {\n    return await this.vaccineDataService.addVaccineData(data);\n  }\n\n  /**\n   * This method is used to get data based on aadhaar number\n   * @param aadhaarnumber is taken from the user\n   * @returns all related data\n   */\n  @Get('getVaccineByaadhhaar/:aadhaarnumber')\n  async getDataByAadhaar(@Param('aadhaarnumber') aadhaarnumber: string) {\n    return await this.vaccineDataService.getDataByAadhaar(aadhaarnumber);\n  }\n\n  /**\n   * This method is used get data based on status\n   * @param status is taken from the user\n   * @returns display all related data\n   */\n  @Get('getDataBasedOnStatus/:status')\n  async getDataByStatus(@Param('status') status: string) {\n    return await this.vaccineDataService.getDataByStatus(status);\n  }\n\n  /**\n   * This method is used get vaccine based on VaccineName\n   * @param status is taken from the user\n   * @returns display all related data\n   */\n  @Get('getDataBasedOnVaccine/:VaccineName')\n  async getDataByVaccine(@Param('VaccineName') VaccineName: string) {\n    return await this.vaccineDataService.getDataByVaccine(VaccineName);\n  }\n\n  /**\n   * This method is used get vaccine based on date\n   * @param status is taken from the user\n   * @returns display all related data\n   */\n  @Get('getDataBasedOnDate/:date')\n  async getVaccineBydate(@Param('date') date: string) {\n    return await this.vaccineDataService.getVaccineBydate(date);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VaccineDataModule.html":{"url":"modules/VaccineDataModule.html","title":"module - VaccineDataModule","body":"\n                   \n\n\n\n\n    Modules\n    VaccineDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VaccineDataModule\n\n\n\ncluster_VaccineDataModule_providers\n\n\n\n\nFindUser\n\nFindUser\n\n\n\nVaccineDataModule\n\nVaccineDataModule\n\nVaccineDataModule -->\n\nFindUser->VaccineDataModule\n\n\n\n\n\nFindVaccineName\n\nFindVaccineName\n\nVaccineDataModule -->\n\nFindVaccineName->VaccineDataModule\n\n\n\n\n\nVaccineDataService\n\nVaccineDataService\n\nVaccineDataModule -->\n\nVaccineDataService->VaccineDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Modules/vaccine-data/vaccine-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FindUser\n                        \n                        \n                            FindVaccineName\n                        \n                        \n                            VaccineDataService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VaccineDataController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VaccineDataController } from './vaccine-data.controller';\nimport { VaccineDataService } from './vaccine-data.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { VaccineData } from './../../Entities/vaccine.data.entity';\nimport { VaccineNames } from './../../Entities/vaccine.name.entity';\nimport {\n  FindUser,\n  FindVaccineName\n} from './../../Common/Providers/find.service';\nimport { User } from 'src/Entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([VaccineData, User, VaccineNames])],\n\n  controllers: [VaccineDataController],\n  providers: [VaccineDataService, FindUser, FindVaccineName]\n})\nexport class VaccineDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaccineDataService.html":{"url":"injectables/VaccineDataService.html","title":"injectable - VaccineDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VaccineDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/vaccine-data/vaccine-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                this is vaccind data service class all data related business logies are avaliabale here\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVaccineData\n                            \n                            \n                                    Async\n                                getDataByAadhaar\n                            \n                            \n                                    Async\n                                getDataByStatus\n                            \n                            \n                                    Async\n                                getDataByVaccine\n                            \n                            \n                                    Async\n                                getVaccineBydate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaccineDataRepository: Repository, findUser: FindUser, findvaccineName: FindVaccineName)\n                    \n                \n                        \n                            \n                                Defined in src/Modules/vaccine-data/vaccine-data.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaccineDataRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findUser\n                                                  \n                                                        \n                                                                        FindUser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findvaccineName\n                                                  \n                                                        \n                                                                        FindVaccineName\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVaccineData\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVaccineData(data: VaccineData)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.service.ts:32\n                \n            \n\n\n            \n                \n                    This is a add vaccine data method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VaccineData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken form the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        updated value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDataByAadhaar\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataByAadhaar(aadhaarnumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.service.ts:72\n                \n            \n\n\n            \n                \n                    This method is used to get data based on aadhaar number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    aadhaarnumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        all related data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDataByStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataByStatus(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.service.ts:83\n                \n            \n\n\n            \n                \n                    This method is used get data based on status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        display all related data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDataByVaccine\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataByVaccine(VaccineName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.service.ts:92\n                \n            \n\n\n            \n                \n                    This method is used get data based on VaccineName\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    VaccineName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        display all related data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVaccineBydate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccineBydate(date: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/vaccine-data/vaccine-data.service.ts:101\n                \n            \n\n\n            \n                \n                    This method is used get data based on date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        display all related data\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  BadRequestException\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { getManager, Repository } from 'typeorm';\nimport { VaccineData } from './../../Entities/vaccine.data.entity';\nimport {\n  FindUser,\n  FindVaccineName\n} from './../../Common/Providers/find.service';\nimport { User } from 'src/Entities/user.entity';\nimport { VaccineNames } from './../../Entities/vaccine.name.entity';\n/**\n * this is vaccind data service class all data related business logies are avaliabale here\n */\n@Injectable()\nexport class VaccineDataService {\n  constructor(\n    @InjectRepository(VaccineData)\n    private readonly vaccineDataRepository: Repository,\n    private readonly findUser: FindUser,\n    private readonly findvaccineName: FindVaccineName\n  ) {}\n\n  /**\n   * This is a add vaccine data method\n   * @param data is taken form the user\n   * @returns updated value\n   */\n  async addVaccineData(data: VaccineData) {\n    const getUser = await this.findUser.userMethods(data.aadhaarnumber);\n    const getVaccineName = await this.findvaccineName.findVaccineName(\n      data.vaccineName\n    );\n    const getdoseNumber = await getManager().query(\n      `select sum(doseNumber) \"doseNumber\" from vaccine_data where aadhaarnumber=${getUser.aadhaarnumber};`\n    );\n    const a = getdoseNumber[0];\n    let vaccineData = new VaccineData();\n    let user = new User();\n    let vaccineNames = new VaccineNames();\n    if (!getUser || !getVaccineName) {\n      throw new NotFoundException('Incorrect data');\n    } else {\n      vaccineData = data;\n      if (data.doseNumber == 1 && a.doseNumber == null) {\n        vaccineData.status = 'partially vaccinated';\n      } else if (data.doseNumber == 2 && a.doseNumber == 1) {\n        vaccineData.status = 'fully vaccinated';\n      } else if (data.doseNumber == 3 && a.doseNumber == 3) {\n        vaccineData.status = 'booster dose done';\n      } else {\n        throw new BadRequestException('vaccine dose number is invalid');\n      }\n      vaccineNames = getVaccineName;\n      user = getUser;\n      //await vaccineNames.addVaccineDate(vaccineData);\n      //await user.addVaccineData(vaccineData);\n      vaccineData.user = user;\n      vaccineData.vaccineNames = vaccineNames;\n      return await this.vaccineDataRepository.save(vaccineData);\n    }\n  }\n\n  /**\n   * This method is used to get data based on aadhaar number\n   * @param aadhaarnumber is taken from the user\n   * @returns all related data\n   */\n  async getDataByAadhaar(aadhaarnumber: string) {\n    return await this.vaccineDataRepository.find({\n      aadhaarnumber: aadhaarnumber\n    });\n  }\n\n  /**\n   * This method is used get data based on status\n   * @param status is taken from the user\n   * @returns display all related data\n   */\n  async getDataByStatus(status: string) {\n    return await this.vaccineDataRepository.find({ status: status });\n  }\n\n  /**\n   * This method is used get data based on VaccineName\n   * @param status is taken from the user\n   * @returns display all related data\n   */\n  async getDataByVaccine(VaccineName: string) {\n    return await this.vaccineDataRepository.find({ vaccineName: VaccineName });\n  }\n\n  /**\n   * This method is used get data based on date\n   * @param status is taken from the user\n   * @returns display all related data\n   */\n  async getVaccineBydate(date: string) {\n    return await this.vaccineDataRepository.find({ doseDate: date });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VaccineNameController.html":{"url":"controllers/VaccineNameController.html","title":"controller - VaccineNameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VaccineNameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/vaccine-name/vaccine-name.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vaccine-name\n            \n\n\n            \n                Description\n            \n            \n                This controller is used to post the vaccine names\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVaccine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVaccine\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVaccine(data: VaccineNames)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('addVaccine')\n                \n            \n\n            \n                \n                    Defined in src/Modules/vaccine-name/vaccine-name.controller.ts:19\n                \n            \n\n\n            \n                \n                    This method is used to post the vaccine names\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VaccineNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is taken from the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        save data to database\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { VaccineNameService } from './vaccine-name.service';\nimport { VaccineNames } from './../../Entities/vaccine.name.entity';\nimport { ApiTags } from '@nestjs/swagger';\n/**\n * This controller is used to post the vaccine names\n */\n@ApiTags('vaccine info')\n@Controller('vaccine-name')\nexport class VaccineNameController {\n  constructor(private readonly vaccinenameService: VaccineNameService) {}\n\n  /**\n   * This method is used to post the vaccine names\n   * @param data is taken from the user\n   * @returns save data to database\n   */\n  @Post('addVaccine')\n  async addVaccine(@Body() data: VaccineNames) {\n    return await this.vaccinenameService.addVaccine(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VaccineNameModule.html":{"url":"modules/VaccineNameModule.html","title":"module - VaccineNameModule","body":"\n                   \n\n\n\n\n    Modules\n    VaccineNameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VaccineNameModule\n\n\n\ncluster_VaccineNameModule_providers\n\n\n\n\nVaccineNameService\n\nVaccineNameService\n\n\n\nVaccineNameModule\n\nVaccineNameModule\n\nVaccineNameModule -->\n\nVaccineNameService->VaccineNameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Modules/vaccine-name/vaccine-name.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VaccineNameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VaccineNameController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VaccineNameController } from './vaccine-name.controller';\nimport { VaccineNameService } from './vaccine-name.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { VaccineNames } from './../../Entities/vaccine.name.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([VaccineNames])],\n\n  controllers: [VaccineNameController],\n  providers: [VaccineNameService]\n})\nexport class VaccineNameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaccineNameService.html":{"url":"injectables/VaccineNameService.html","title":"injectable - VaccineNameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VaccineNameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/vaccine-name/vaccine-name.service.ts\n        \n\n\n            \n                Description\n            \n            \n                vaccine name related business logics are avaliable here\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVaccine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaccineNameRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/Modules/vaccine-name/vaccine-name.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaccineNameRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVaccine\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVaccine(data: VaccineNames)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/vaccine-name/vaccine-name.service.ts:20\n                \n            \n\n\n            \n                \n                    this method is used to add the new vaccine\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VaccineNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        taken from the admin\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        show the output if data is added or not\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { VaccineNames } from './../../Entities/vaccine.name.entity';\n/**\n * vaccine name related business logics are avaliable here\n */\n@Injectable()\nexport class VaccineNameService {\n  constructor(\n    @InjectRepository(VaccineNames)\n    private readonly vaccineNameRepository: Repository\n  ) {}\n\n  /**\n   * this method is used to add the new vaccine\n   * @param data taken from the admin\n   * @returns show the output if data is added or not\n   */\n  async addVaccine(data: VaccineNames) {\n    const getVaccine = await this.vaccineNameRepository.findOne({\n      vaccineName: data.vaccineName\n    });\n    if (getVaccine) {\n      throw new BadRequestException('vaccine name already exist..!');\n    }\n    return this.vaccineNameRepository.save(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VaccineNames.html":{"url":"entities/VaccineNames.html","title":"entity - VaccineNames","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VaccineNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/vaccine.name.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a vaccine name entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effectiveDate\n                            \n                            \n                                id\n                            \n                            \n                                vaccineData\n                            \n                            \n                                vaccineName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        effectiveDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.name.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.name.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaccineData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, vaccineData => vaccineData.vaccineNames)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.name.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/vaccine.name.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { VaccineData } from './vaccine.data.entity';\n/**\n * This is a vaccine name entity\n */\n@Entity()\nexport class VaccineNames {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  @ApiProperty()\n  vaccineName: string;\n\n  @Column()\n  @ApiProperty()\n  effectiveDate: Date;\n\n  // @BeforeInsert()\n  // ChangeDate() {\n  //   this.effectiveDate = moment(this.effectiveDate).format('DD MM YYYY');\n  // }\n\n  @OneToMany(() => VaccineData, (vaccineData) => vaccineData.vaccineNames)\n  vaccineData: VaccineData[];\n\n  async addVaccineDate(vaccineData: VaccineData) {\n    if (this.vaccineData == null) {\n      this.vaccineData = new Array();\n    }\n    this.vaccineData.push(vaccineData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/Pipes/validation.pipes.ts\n        \n\n\n            \n                Description\n            \n            \n                This method is used to validate inputs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: any)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Pipes/validation.pipes.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Pipes/validation.pipes.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  ArgumentMetadata,\n  BadRequestException\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n/**\n * This method is used to validate inputs\n */\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: any): boolean {\n    const types: any[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Common/Decorators/roles.decorators.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Common/Filters/exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/Common/Guards/roles.guards.ts\n            \n            guard\n            RolesGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Common/MiddleWare/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Common/Pipes/validation.pipes.ts\n            \n            injectable\n            ValidationPipe\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Common/Providers/find.service.ts\n            \n            injectable\n            FindUser\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Common/Providers/find.service.ts\n            \n            injectable\n            FindVaccineName\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Common/Providers/jwt.service.ts\n            \n            class\n            JwtServiceClass\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/Common/TypeOrm/typeorm.config.ts\n            \n            variable\n            TypeOrmConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Common/TypeOrm/typeorm.interface.ts\n            \n            class\n            TypeOrmInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/Config/Swagger/swagger.config.ts\n            \n            variable\n            SWAGGER_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Config/Swagger/swagger.interface.ts\n            \n            interface\n            SwaggerConfig\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/Config/Swagger/swagger.ts\n            \n            function\n            createDocument\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Entities/maintainance.entity.ts\n            \n            class\n            MaintainanceEntity\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Entities/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Entities/user.entity.ts\n            \n            variable\n            bcrypt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Entities/vaccine.data.entity.ts\n            \n            entity\n            VaccineData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Entities/vaccine.name.entity.ts\n            \n            entity\n            VaccineNames\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Modules/user/UserDto/user.dto.ts\n            \n            class\n            UserDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/Modules/user/user.service.ts\n            \n            variable\n            bcrypt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Modules/vaccine-data/vaccine-data.controller.ts\n            \n            controller\n            VaccineDataController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/Modules/vaccine-data/vaccine-data.service.ts\n            \n            injectable\n            VaccineDataService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/Modules/vaccine-name/vaccine-name.controller.ts\n            \n            controller\n            VaccineNameController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/Modules/vaccine-name/vaccine-name.service.ts\n            \n            injectable\n            VaccineNameService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^0.0.5\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            moment : ^2.29.1\n        \n            mysql2 : ^2.3.3\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createDocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    This method is main all execution is start from here\n\n\n                \n            \n        \n    \n    src/Config/Swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDocument\n                        \n                    \n                \n            \n            \n                \ncreateDocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    This function is used to create a swagger\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is imported from the nestjs commom library\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        create swagger document\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VaccineDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VaccineNameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_VaccineDataModule\n\n\n\ncluster_VaccineDataModule_providers\n\n\n\ncluster_VaccineNameModule\n\n\n\ncluster_VaccineNameModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nVaccineDataModule\n\nVaccineDataModule\n\nAppModule -->\n\nVaccineDataModule->AppModule\n\n\n\n\n\nVaccineNameModule\n\nVaccineNameModule\n\nAppModule -->\n\nVaccineNameModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nFindUser\n\nFindUser\n\nVaccineDataModule -->\n\nFindUser->VaccineDataModule\n\n\n\n\n\nFindVaccineName\n\nFindVaccineName\n\nVaccineDataModule -->\n\nFindVaccineName->VaccineDataModule\n\n\n\n\n\nVaccineDataService\n\nVaccineDataService\n\nVaccineDataModule -->\n\nVaccineDataService->VaccineDataModule\n\n\n\n\n\nVaccineNameService\n\nVaccineNameService\n\nVaccineNameModule -->\n\nVaccineNameService->VaccineNameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (src/.../user.entity.ts)\n                        \n                        \n                            bcrypt   (src/.../user.service.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorators.ts)\n                        \n                        \n                            SWAGGER_CONFIG   (src/.../swagger.config.ts)\n                        \n                        \n                            TypeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/Entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n            \n                \n                    This bcrypt is used to hash the password\n\n                \n            \n\n        \n    \n\n    src/Modules/user/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n            \n                \n                    This bcrypt is used to hash the password\n\n                \n            \n\n        \n    \n\n    src/Common/Decorators/roles.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (roles) => SetMetadata('roles', roles)\n                    \n                \n\n            \n                \n                    This variable is nothing but a custom decorator this is used to find the roles related info\n\n                \n            \n\n        \n    \n\n    src/Config/Swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SWAGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwaggerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  Title: 'Covid App',\n  Description: 'All covid related data is avaliable here',\n  Version: '1.0',\n  Tags: ['Template']\n}\n                    \n                \n\n            \n                \n                    This variable is used to configure the swagger related info\n\n                \n            \n\n        \n    \n\n    src/Common/TypeOrm/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeOrmConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOrmInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  host: 'localhost',\n  port: 3306,\n  username: 'root',\n  password: 'root',\n  database: 'cowinapp'\n}\n                    \n                \n\n            \n                \n                    all typeOrm configurations are avaliable here\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
